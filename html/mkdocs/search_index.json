{
    "docs": [
        {
            "location": "/index.html",
            "text": "Welcome to Dolmen\n\n\nThis is the new website for Dolmen 2.0. It is currently under construction.\n\n\nOverview\n\n\nDolmen is a free, open-source software toolbox for the analysis of annotated speech. It offers a user-friendly interface to manage, annotate and query language corpora. It is particularly well suited for dealing with time-aligned data. The main features it offers are: \n\n\n\n\nProject management: organize files into projects and manage versions. \n\n\nExtensible metadata: files can be annotated with properties, which allow you to sort and organize your data. \n\n\nInteraction with Praat: Dolmen can read TextGrid files and open files directly in Praat. \n\n\nPowerful search engine: build and save complex queries; search patterns across tiers. \n\n\nStandard-based: Dolmen files are encoded in XML and Unicode. \n\n\nScripting engine: Dolmen can be extended with plugins written in Lua and JSON.\n\n\n\n\nDolmen runs on all major platforms (Windows, Mac OS X and GNU/Linux) and is freely available under the terms of the GNU General Public License (GPL). \nThe latest version of Dolmen can be downloaded from \nwww.dolmenling.com\n. If you encounter any problem or bug, please write to j.eychenne@gmail.com. \n\n\nPreview version of Dolmen 2 (Windows only)\n\n\nDolmen 1.9 is the most up-to-date version on Dolmen. It is a preview version of Dolmen 2.0, and is currently available for Windows only \n(other platforms will follow once Dolmen 2.0 is released). Although it is still lacking some features and its documentation is incomplete, \nWindows users are encouraged to upgrade to this version as it contains many improvements and bug fixes. Note that this version can be installed\nside by side with the previous version (Dolmen 1.3).\n\n\nInstallation (previous version)\n\n\nWindows\n\n\nOn Windows, Dolmen is provided as a self-contained installer file. Simply double-click on \u2018dolmen_setup.exe\u2019 and follow the instructions.\n\n\nThe procedure will install Dolmen in your \nProgram Files\n directory and will create a shortcut in the start menu (and optionally on the desktop).\n\n\nIf you wish to be able to open files in Praat from Dolmen, you will need to install Praat in Dolmen\u2019s installation directory, which should be either \n\nC:\\Program Files (x86)\\Dolmen\\Tools\n or \nC:\\Program Files\\Dolmen\\Tools\n, depending on your system. Alternatively, you can modify Praat\u2019s default \npath with the preference editor.\n\n\nMac OS\n\n\nOn Mac OS, Dolmen is provided as a standard DMG image disk. Mount the image by double-clicking on it and drag the application \nDolmen\n into your \n\nApplications\n folder. If you want Dolmen to be able to interact with Praat, you will need to install it in the \nApplications\n folder too.\n\n\nCurrently, only Mac OS 10.7 (Snow Leopard) and later are \u201cofficially\u201d supported. It does not work on earlier versions.\n\n\nLinux (Debian/Ubuntu)\n\n\nThe official executable that is provided on the website is built on Debian 9 and is available for 64-bit architectures. \n\n\nSince the program is available as a dynamically-linked executable, first make sure that the needed dependencies are installed (asound, libsndfile, speexdsp, Qt 5 and GTK 2). Most of these packages should already be installed, but you can issue the following command in a terminal to make sure they are:\n\n\nsudo apt-get install libasound2 libsndfile1 libspeexdsp1 libgtk2.0-0 qt5-default libqt5sql5-sqlite\n\n\n\n\nNext, assuming that you downloaded the archive in your \nDownloads\n directory, type the following commands in a terminal (replacing \nXX\n by the appropriate version number):\n\n\ntar xvjpf dolmen-XX-linux64.tar.bz2\nchmod +x dolmen/dolmen\nsudo mv dolmen/dolmen /usr/local/bin\nrm -r dolmen\n\n\n\n\nYou can now run Dolmen by simply typing \ndolmen\n from a terminal window.\n\n\nIf you get an error about a missing SQL plugin, try to add the following line to your \n.bashrc\n configuration file:\n\n\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu/qt5/plugins/sqldrivers\n\n\n\n\nCompiling from source\n\n\nYou need to install the development packages for QT 5.3 or greater (including the sqlite plugin), GTK 2, ALSA (libasound2), libspeexdsp and libsndfile. \nYou also need to manually build Qwt 6.1.0 (or later). Then, assuming that you have downloaded the source for version 1.3 in your \nDownloads\n directory, \nyou can compile it by typing the following commands in the terminal:\n\n\nunzip dolmen-1.3.zip\ncd dolmen\nqmake dolmen.pro; make\n\n\n\n\nThis will create an executable file called \ndolmen\n that you can put anywhere. To put it in \n/usr/local/bin\n, do:\n\n\nsudo mv dolmen /usr/local/bin/\n\n\n\n\nAssuming that \nsudo\n is installed and properly configured on your system. You can then run Dolmen by simply typing \ndolmen\n in the terminal. \n\n\nKnown issues\n\n\nOn Mac OS, clicking on the sound scrollbar buttons after an item is selected in a tier results in the scollbar moving until an edge is reached.",
            "title": "Getting started"
        },
        {
            "location": "/index.html#welcome-to-dolmen",
            "text": "This is the new website for Dolmen 2.0. It is currently under construction.",
            "title": "Welcome to Dolmen"
        },
        {
            "location": "/index.html#overview",
            "text": "Dolmen is a free, open-source software toolbox for the analysis of annotated speech. It offers a user-friendly interface to manage, annotate and query language corpora. It is particularly well suited for dealing with time-aligned data. The main features it offers are:    Project management: organize files into projects and manage versions.   Extensible metadata: files can be annotated with properties, which allow you to sort and organize your data.   Interaction with Praat: Dolmen can read TextGrid files and open files directly in Praat.   Powerful search engine: build and save complex queries; search patterns across tiers.   Standard-based: Dolmen files are encoded in XML and Unicode.   Scripting engine: Dolmen can be extended with plugins written in Lua and JSON.   Dolmen runs on all major platforms (Windows, Mac OS X and GNU/Linux) and is freely available under the terms of the GNU General Public License (GPL). \nThe latest version of Dolmen can be downloaded from  www.dolmenling.com . If you encounter any problem or bug, please write to j.eychenne@gmail.com.",
            "title": "Overview"
        },
        {
            "location": "/index.html#preview-version-of-dolmen-2-windows-only",
            "text": "Dolmen 1.9 is the most up-to-date version on Dolmen. It is a preview version of Dolmen 2.0, and is currently available for Windows only \n(other platforms will follow once Dolmen 2.0 is released). Although it is still lacking some features and its documentation is incomplete, \nWindows users are encouraged to upgrade to this version as it contains many improvements and bug fixes. Note that this version can be installed\nside by side with the previous version (Dolmen 1.3).",
            "title": "Preview version of Dolmen 2 (Windows only)"
        },
        {
            "location": "/index.html#installation-previous-version",
            "text": "",
            "title": "Installation (previous version)"
        },
        {
            "location": "/index.html#windows",
            "text": "On Windows, Dolmen is provided as a self-contained installer file. Simply double-click on \u2018dolmen_setup.exe\u2019 and follow the instructions.  The procedure will install Dolmen in your  Program Files  directory and will create a shortcut in the start menu (and optionally on the desktop).  If you wish to be able to open files in Praat from Dolmen, you will need to install Praat in Dolmen\u2019s installation directory, which should be either  C:\\Program Files (x86)\\Dolmen\\Tools  or  C:\\Program Files\\Dolmen\\Tools , depending on your system. Alternatively, you can modify Praat\u2019s default \npath with the preference editor.",
            "title": "Windows"
        },
        {
            "location": "/index.html#mac-os",
            "text": "On Mac OS, Dolmen is provided as a standard DMG image disk. Mount the image by double-clicking on it and drag the application  Dolmen  into your  Applications  folder. If you want Dolmen to be able to interact with Praat, you will need to install it in the  Applications  folder too.  Currently, only Mac OS 10.7 (Snow Leopard) and later are \u201cofficially\u201d supported. It does not work on earlier versions.",
            "title": "Mac OS"
        },
        {
            "location": "/index.html#linux-debianubuntu",
            "text": "The official executable that is provided on the website is built on Debian 9 and is available for 64-bit architectures.   Since the program is available as a dynamically-linked executable, first make sure that the needed dependencies are installed (asound, libsndfile, speexdsp, Qt 5 and GTK 2). Most of these packages should already be installed, but you can issue the following command in a terminal to make sure they are:  sudo apt-get install libasound2 libsndfile1 libspeexdsp1 libgtk2.0-0 qt5-default libqt5sql5-sqlite  Next, assuming that you downloaded the archive in your  Downloads  directory, type the following commands in a terminal (replacing  XX  by the appropriate version number):  tar xvjpf dolmen-XX-linux64.tar.bz2\nchmod +x dolmen/dolmen\nsudo mv dolmen/dolmen /usr/local/bin\nrm -r dolmen  You can now run Dolmen by simply typing  dolmen  from a terminal window.  If you get an error about a missing SQL plugin, try to add the following line to your  .bashrc  configuration file:  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu/qt5/plugins/sqldrivers",
            "title": "Linux (Debian/Ubuntu)"
        },
        {
            "location": "/index.html#compiling-from-source",
            "text": "You need to install the development packages for QT 5.3 or greater (including the sqlite plugin), GTK 2, ALSA (libasound2), libspeexdsp and libsndfile. \nYou also need to manually build Qwt 6.1.0 (or later). Then, assuming that you have downloaded the source for version 1.3 in your  Downloads  directory, \nyou can compile it by typing the following commands in the terminal:  unzip dolmen-1.3.zip\ncd dolmen\nqmake dolmen.pro; make  This will create an executable file called  dolmen  that you can put anywhere. To put it in  /usr/local/bin , do:  sudo mv dolmen /usr/local/bin/  Assuming that  sudo  is installed and properly configured on your system. You can then run Dolmen by simply typing  dolmen  in the terminal.",
            "title": "Compiling from source"
        },
        {
            "location": "/index.html#known-issues",
            "text": "On Mac OS, clicking on the sound scrollbar buttons after an item is selected in a tier results in the scollbar moving until an edge is reached.",
            "title": "Known issues"
        },
        {
            "location": "/scripting/index.html",
            "text": "Overview\n\n\nDolmen can be extended using the \nLua\n scripting language. There are several ways this \n\n\n\n\nthe console at the bottom of the main window accepts lua commands.\n\n\nplugins\n are extensions, written in a JSON and Lua, which can add features to Dolmen\n\n\n\n\nTO BE CONTINUED...",
            "title": "Overview"
        },
        {
            "location": "/scripting/index.html#overview",
            "text": "Dolmen can be extended using the  Lua  scripting language. There are several ways this    the console at the bottom of the main window accepts lua commands.  plugins  are extensions, written in a JSON and Lua, which can add features to Dolmen   TO BE CONTINUED...",
            "title": "Overview"
        },
        {
            "location": "/scripting/plugins/index.html",
            "text": "Plugins\n\n\nDolmen can be extended with plugins, which are written in JSON and Lua. When it starts up, Dolmen loads all plugins which are located\nin the system plugin directory or in the user plugin directory. Plugins can be redistributed as ZIP files (the \n.zip\n extension is compulsory).\nTo install a plugin, go to \nFile > Install plugin...\n and choose the ZIP file. It will be installed in the current user\u2019s plugin directory.\n\n\nStructure of a plugin\n\n\nTo be valid, a plugin must adhere to a number of conventions: if they are not respected, Dolmen will silently ignore the plugin. \nThe root directory of the plugin must contain the following:\n\n\n\n\na description file, named description.json (compulsory)\n\n\na \nScripts\n sub-directory, which contains all your scripts (optional).\n\n\na \nGrammars\n sub-directory, which contains all your\n\n\na \nResources\n sub-directory, which may contain anything (optional).\n\n\n\n\nThe description file contains all the information necessary to initialize the plugin. All declarative aspects of the plugin are written in the JSON format \nand must bear the extension \n.json\n. Scripts are written in Lua and must bear the extension \n.lua\n.\n\n\nHere is an example of a basic \ndescription.json\n file:\n\n\n{\n    \"PluginInfo\": {\n        \"Name\": \"My first plugin\",\n        \"Version\": \"0.1\",\n    },\n\n    \"Menu\": {\"Text\": \"Custom menu\", \"Actions\":\n        [\n            {\"Type\": \"Action\", \"Text\": \"Test script\", \"Script\": \"test.lua\", \"Shortcut\": \"Ctrl+T\"}\n        ]\n    }\n}\n\n\n\n\nThe header \nPluginInfo\n is the only part that is compulsory. It contains essential information about the plugin. The \nMenu\n key lets you \ncreate a custom menu: each menu entry (called \"action\") is associated with a script which must be located in the \nScripts\n sub-directory. \nWhen you click on an action in the menu, the corresponding script is executed. It is also possible to assign a shortcut to a given action.\n\n\nDefining search grammars\n\n\nIf you have devised a coding scheme for your data, Dolmen lets you define a \"search grammar\". A search grammar is a description of your \ncoding scheme which offers a user-friendly interface for querying your data; it tells Dolmen what to look for and how to present the \ninformation to the user.  Dolmen will automatically load all valid search grammars that are located in the \nGrammars\n sub-directory of your \nplugin. It will create a submenu in the \nConc\n menu, whose name is the name of your plugins. All search grammars will be be available as tabs\nin that submenu. \n\n\nA search grammar defines a number of fields which can take on a number of values. The user is presented with a number of checkboxes for \neach field, and Dolmen converts the query to the corresponding regular expression, as defined by the grammar. Here is a simple yet realistic \nexample, drawn from the PFC project:\n\n\n{\n    \"Header\" : {\n        \"Object\" : \"SearchGrammar\",\n        \"DisplayName\": \"Schwa\",\n        \"Version\": \"0.9\",\n    },\n\n    \"Separator\": \"\",\n    \"FileType\": \"Annotation\",\n    \"Tier\": 2,\n    \"FieldsPerRow\": 2,\n\n    \"Fields\" : [\n\n        {\"Name\": \"Schwa\", \"MatchAll\": \"[0-2]\",\n         \"Values\": [\n            {\"Match\": \"0\", \"Text\": \"Absent\"},\n            {\"Match\": \"1\", \"Text\": \"Present\"},\n            {\"Match\": \"2\", \"Text\": \"Uncertain\"}, \n         ]\n        },\n\n        {\"Name\": \"Position\", \"MatchAll\": \"[1-5]\", \n         \"Values\": [\n            {\"Match\": \"1\",  \"Text\": \"monosyllable\"},\n            {\"Match\": \"2\",  \"Text\": \"initial syllable\"},\n            {\"Match\": \"3\",  \"Text\": \"median syllable\"}\n            {\"Match\": \"4\",  \"Text\": \"final syllable\"}\n            {\"Match\": \"5\",  \"Text\": \"metathesis\"}\n         ]\n        },\n\n\n        {\"Name\": \"Left context\", \"MatchAll\": \"[1-5]\",\n         \"Values\": [\n            {\"Match\": \"1\",  \"Text\": \"vowel\"},\n            {\"Match\": \"2\",  \"Text\": \"consonant\"}\n            {\"Match\": \"3\",  \"Text\": \"start of an intonational phrase\"}\n            {\"Match\": \"4\",  \"Text\": \"uncertain vowel\"}\n            {\"Match\": \"5\",  \"Text\": \"simplified cluster\"}\n         ]      \n        },\n\n\n        {\"Name\": \"Right context\", \"MatchAll\": \"[1-4]\",\n         \"Values\": [\n            {\"Match\": \"1\", \"Text\": \"vowel\"},\n            {\"Match\": \"2\", \"Text\": \"consonant\"},\n            {\"Match\": \"3\", \"Text\": \"weak prosodic boundary\"},\n            {\"Match\": \"4\", \"Text\": \"strong prosodic boundary\"}\n         ]\n        }   \n    ]\n}\n\n\n\n\nWe first see a \nHeader\n, which provides information about the file. The field \nObject\n indicates that the file is a search grammar, the \n\nName\n corresponds to the name of the grammar, as it will be seen by the user, and \nVersion\n corresponds to the version of the grammar.\n\n\nNext, the \nSeparator\n attribute indicates the separator to be used between fields. In this case, it is an empty string, which means that the \nfields are concatenated directly (e.g. \n1412\n). If the separator was \n_\n, each field should be separated by this symbol (e.g. \n1_4_1_2\n). \nNote that although a field may be only one digit (or one character), it does not need to be so; a field can be of any length, provided that it can be described by a regular expression.\n\n\nNext the \nTier\n attribute indicates the tier number in which codings should be searched for. \n\n\nThe following attribute, \nFieldsPerRow\n, lets us specify how many fields should be displayed in a row. In our case, since there are 4 fields,\nwe decide to distribute them across 2 rows containing 2 fields each. \n\n\nFinally, the \nFields\n attribute contains a list of fields, each of them corresponding to a JSON object. The \nName\n attribute provides a descriptive\nlabel for the field. The \nMatchAll\n attribute is a regular expression that should match all possible values for the field. If a user doesn't check \nany value for a field, this attribute will be used to retrieve all possible values. The \nValues\n attribute contains a list of value. Each of them \ncontains (at least) a \nMatch\n attribute, which is a string corresponding to the value, and a \nText\n attribute which is the label that will be displayed\nin the user interface for the corresponding value, along with a check box. Note that checking all values has the same effect as leaving all values unchecked. \n\n\nTO BE CONTINUED...",
            "title": "Plugins"
        },
        {
            "location": "/scripting/plugins/index.html#plugins",
            "text": "Dolmen can be extended with plugins, which are written in JSON and Lua. When it starts up, Dolmen loads all plugins which are located\nin the system plugin directory or in the user plugin directory. Plugins can be redistributed as ZIP files (the  .zip  extension is compulsory).\nTo install a plugin, go to  File > Install plugin...  and choose the ZIP file. It will be installed in the current user\u2019s plugin directory.",
            "title": "Plugins"
        },
        {
            "location": "/scripting/plugins/index.html#structure-of-a-plugin",
            "text": "To be valid, a plugin must adhere to a number of conventions: if they are not respected, Dolmen will silently ignore the plugin. \nThe root directory of the plugin must contain the following:   a description file, named description.json (compulsory)  a  Scripts  sub-directory, which contains all your scripts (optional).  a  Grammars  sub-directory, which contains all your  a  Resources  sub-directory, which may contain anything (optional).   The description file contains all the information necessary to initialize the plugin. All declarative aspects of the plugin are written in the JSON format \nand must bear the extension  .json . Scripts are written in Lua and must bear the extension  .lua .  Here is an example of a basic  description.json  file:  {\n    \"PluginInfo\": {\n        \"Name\": \"My first plugin\",\n        \"Version\": \"0.1\",\n    },\n\n    \"Menu\": {\"Text\": \"Custom menu\", \"Actions\":\n        [\n            {\"Type\": \"Action\", \"Text\": \"Test script\", \"Script\": \"test.lua\", \"Shortcut\": \"Ctrl+T\"}\n        ]\n    }\n}  The header  PluginInfo  is the only part that is compulsory. It contains essential information about the plugin. The  Menu  key lets you \ncreate a custom menu: each menu entry (called \"action\") is associated with a script which must be located in the  Scripts  sub-directory. \nWhen you click on an action in the menu, the corresponding script is executed. It is also possible to assign a shortcut to a given action.",
            "title": "Structure of a plugin"
        },
        {
            "location": "/scripting/plugins/index.html#defining-search-grammars",
            "text": "If you have devised a coding scheme for your data, Dolmen lets you define a \"search grammar\". A search grammar is a description of your \ncoding scheme which offers a user-friendly interface for querying your data; it tells Dolmen what to look for and how to present the \ninformation to the user.  Dolmen will automatically load all valid search grammars that are located in the  Grammars  sub-directory of your \nplugin. It will create a submenu in the  Conc  menu, whose name is the name of your plugins. All search grammars will be be available as tabs\nin that submenu.   A search grammar defines a number of fields which can take on a number of values. The user is presented with a number of checkboxes for \neach field, and Dolmen converts the query to the corresponding regular expression, as defined by the grammar. Here is a simple yet realistic \nexample, drawn from the PFC project:  {\n    \"Header\" : {\n        \"Object\" : \"SearchGrammar\",\n        \"DisplayName\": \"Schwa\",\n        \"Version\": \"0.9\",\n    },\n\n    \"Separator\": \"\",\n    \"FileType\": \"Annotation\",\n    \"Tier\": 2,\n    \"FieldsPerRow\": 2,\n\n    \"Fields\" : [\n\n        {\"Name\": \"Schwa\", \"MatchAll\": \"[0-2]\",\n         \"Values\": [\n            {\"Match\": \"0\", \"Text\": \"Absent\"},\n            {\"Match\": \"1\", \"Text\": \"Present\"},\n            {\"Match\": \"2\", \"Text\": \"Uncertain\"}, \n         ]\n        },\n\n        {\"Name\": \"Position\", \"MatchAll\": \"[1-5]\", \n         \"Values\": [\n            {\"Match\": \"1\",  \"Text\": \"monosyllable\"},\n            {\"Match\": \"2\",  \"Text\": \"initial syllable\"},\n            {\"Match\": \"3\",  \"Text\": \"median syllable\"}\n            {\"Match\": \"4\",  \"Text\": \"final syllable\"}\n            {\"Match\": \"5\",  \"Text\": \"metathesis\"}\n         ]\n        },\n\n\n        {\"Name\": \"Left context\", \"MatchAll\": \"[1-5]\",\n         \"Values\": [\n            {\"Match\": \"1\",  \"Text\": \"vowel\"},\n            {\"Match\": \"2\",  \"Text\": \"consonant\"}\n            {\"Match\": \"3\",  \"Text\": \"start of an intonational phrase\"}\n            {\"Match\": \"4\",  \"Text\": \"uncertain vowel\"}\n            {\"Match\": \"5\",  \"Text\": \"simplified cluster\"}\n         ]      \n        },\n\n\n        {\"Name\": \"Right context\", \"MatchAll\": \"[1-4]\",\n         \"Values\": [\n            {\"Match\": \"1\", \"Text\": \"vowel\"},\n            {\"Match\": \"2\", \"Text\": \"consonant\"},\n            {\"Match\": \"3\", \"Text\": \"weak prosodic boundary\"},\n            {\"Match\": \"4\", \"Text\": \"strong prosodic boundary\"}\n         ]\n        }   \n    ]\n}  We first see a  Header , which provides information about the file. The field  Object  indicates that the file is a search grammar, the  Name  corresponds to the name of the grammar, as it will be seen by the user, and  Version  corresponds to the version of the grammar.  Next, the  Separator  attribute indicates the separator to be used between fields. In this case, it is an empty string, which means that the \nfields are concatenated directly (e.g.  1412 ). If the separator was  _ , each field should be separated by this symbol (e.g.  1_4_1_2 ). \nNote that although a field may be only one digit (or one character), it does not need to be so; a field can be of any length, provided that it can be described by a regular expression.  Next the  Tier  attribute indicates the tier number in which codings should be searched for.   The following attribute,  FieldsPerRow , lets us specify how many fields should be displayed in a row. In our case, since there are 4 fields,\nwe decide to distribute them across 2 rows containing 2 fields each.   Finally, the  Fields  attribute contains a list of fields, each of them corresponding to a JSON object. The  Name  attribute provides a descriptive\nlabel for the field. The  MatchAll  attribute is a regular expression that should match all possible values for the field. If a user doesn't check \nany value for a field, this attribute will be used to retrieve all possible values. The  Values  attribute contains a list of value. Each of them \ncontains (at least) a  Match  attribute, which is a string corresponding to the value, and a  Text  attribute which is the label that will be displayed\nin the user interface for the corresponding value, along with a check box. Note that checking all values has the same effect as leaving all values unchecked.   TO BE CONTINUED...",
            "title": "Defining search grammars"
        },
        {
            "location": "/scripting/api/string/index.html",
            "text": "String manipulation\n\n\nThis page documents the \nstring\n module.\n\n\nGeneral concepts\n\n\nA \nstring\n is a sequence of characters enclosed between double quotes, such as \n\"this\"\n. Strings in Lua are immutable, which means that you cannot\nmodify them directly. All functions which \"modify\" a string actually return a new (modified) copy of the string but leave the original string unchanged. \n\n\nAll string functions assume that strings are encoded according to the UTF-8 \nUnicode\n standard. A good tutorial about UTF-8 can be \nfound at the following address: \nhttp://www.zehnet.de/2005/02/12/unicode-utf-8-tutorial\n. In the\nremainder of this document, the word \ncharacter\n is used to mean \ncode point\n, unless otherwise noted. \n\n\nApplication Programming Interface\n\n\n\n\n\n\nat(str, pos)\n\n\nGet character at position \npos\n.\n\n\n\n\n\n\nlen(str)\n\n\nReturns the length of the string, in Unicode code points.\n\n\nlocal size = string.len(\"\uc548\ub155\ud558\uc138\uc694\")\nprint(size) -- Prints \"5\"\n\n\n\n\nSee also: \nbyte_count\n\n\n\n\n\n\nbyte_count(str)\n\n\nReturns the length of the string, in bytes (or Unicode code units). For strings encoded in ASCII (mostly, strings of English text with no \"special\" character), \neach code unit is represented with 1 byte, such that \nbytecount\n and \nlen\n return the same result. For most other languages, however, the number of bytes and the \nnumber of code points will be different.\n\n\n\nlocal english = \"hello\"\nlocal korean  = \"\uc548\ub155\ud558\uc138\uc694\"\n\nprint(string.len(english)) -- prints \"5\"\nprint(string.len(korean))  -- prints \"5\"\n\nprint(string.byte_count(english)) -- prints \"5\"\nprint(string.byte_count(korean))  -- prints \"15\"\n\n\n\n\nSee also: \nlen\n\n\n\n\n\n\ntrim(str)\n\n\nReturns a copy of the string with whitespace characters removed at both ends of the string. \n\n\nlocal s = \"\\t  hello  \\n\"\n\ns = string.trim(s)\nprint(\"$\" .. s .. \"$\") -- prints \"$hello$\"\n\n\n\n\nSee also: \nltrim\n, \nrtrim\n\n\n\n\n\n\nltrim(str)\n\n\nReturns a copy of the string with whitespace characters removed at the left end of the string. \n\n\nlocal s = \"  hello  \"\n\ns = string.ltrim(s)\nprint(\"$\" .. s .. \"$\") -- prints \"$hello  $\"\n\n\n\n\nSee also: \ntrim\n, \nrtrim\n\n\n\n\n\n\nrtrim(str)\n\n\nReturns a copy of the string with whitespace characters removed at the right end of the string. \n\n\nlocal s = \"  hello  \"\n\ns = string.rtrim(s)\nprint(\"$\" .. s .. \"$\") -- prints \"$  hello$\"\n\n\n\n\nSee also: \nltrim\n, \ntrim\n\n\n\n\n\n\nstarts_with(str, prefix)\n\n\nReturns true if \nstr\n starts with \nprefix\n, and \nfalse\n otherwise.\n\n\nSee also: \nends_with\n\n\n\n\n\n\nends_with(str, suffix)\n\n\nReturns true if \nstr\n ends with \nsuffix\n, and \nfalse\n otherwise.\n\n\nSee also: \nstarts_with\n\n\n\n\n\n\ncontains(str, substring)\n\n\nReturns true if \nstr\n ends with \nsubstring\n, and \nfalse\n otherwise.\n\n\n\n\n\n\ncount(str, substring)\n\n\nReturns the number of times \nsubstring\n appears in \nstr\n. \n\n\nlocal s = \"cacococococa\"\nlocal count = string.count(s, \"coco\")\n\nprint(count) -- prints \"2\"\n\n\n\n\nNote: matches don't overlap. \n\n\n\n\n\n\nto_upper(str)\n\n\nReturns a copy of \nstr\n where each code point has been converted to upper case. \n\n\nlocal s1 = \"c'\u00e9tait \u00e7a\"\nlocal s2 = string.to_upper(s1)\n\nprint(s2) -- prints \"C'\u00c9TAIT \u00c7A\"\n\n\n\n\nSee also: \nto_lower\n\n\n\n\n\n\nto_lower(str)\n\n\nReturns a copy of \nstr\n where each code point has been converted to lower case. \n\n\nlocal s1 = \"C'\u00c9TAIT \u00c7A\"\nlocal s2 = string.to_lower(s1)\n\nprint(s2) -- prints \"c'\u00e9tait \u00e7a\"\n\n\n\n\nSee also: \nto_upper\n\n\n\n\n\n\nreplace(str, old, new)\n\n\nReturns a copy of \nstr\n where all (non-overlapping) instances of the substring \nold\n have been replaced by \nnew\n.\n\n\nSee also:  \nreplace_at\n, \nreplace_first\n, \nreplace_last\n\n\n\n\n\n\nreplace_at(str, at, count, new)\n\n\nReturns a copy of \nstr\n where \ncount\n code points, starting at position \nat\n, have been replaced by \nnew\n.\n\n\nSee also: \nreplace\n, \nreplace_first\n, \nreplace_last\n\n\n\n\n\n\nreplace_first(str, old, new)\n\n\nReturns a copy of \nstr\n where the first instance of the substring \nold\n has been replaced by \nnew\n.\n\n\nSee also:  \nreplace_at\n, \nreplace\n, \nreplace_last\n \n\n\n\n\n\n\nreplace_last(str, old, new)\n\n\nReturns a copy of \nstr\n where the last instance of the substring \nold\n has been replaced by \nnew\n.\n\n\nSee also:  \nreplace_at\n, \nreplace\n, \nreplace_first\n \n\n\n\n\n\n\nconcat(str1, str2)\n\n\nCreate a new string which is the concatenation of \nstr1\n and \nstr2\n. In general, you should use Lua's built-in concatenation \noperator \n..\n instead of this function. \n\n\n\n\n\n\ncontains(str, substr)\n\n\nReturns true if \nstr\n contains \nsubstr\n and false otherwise. If \nsubstr\n is the empty string, the result is true. \n\n\n\n\n\n\nremove(str, substr)\n\n\nReturns a copy of \nstr\n where all (non-overlapping) instances of the substring \nsubstr\n have been removed.\n\n\nSee also: \nremove_at\n, \nremove_first\n, \nremove_last\n\n\n\n\n\n\nremove_at(str, at, count)\n\n\nReturns a copy of \nstr\n where \ncount\n code points, starting at position \nat\n, have been removed.\n\n\nSee also: \nremove\n, \nremove_first\n, \nremove_last\n\n\n\n\n\n\nremove_first(str, substr)\n\n\nReturns a copy of \nstr\n where the first instance of \nsubstr\n has been removed.\n\n\nSee also: \nremove_at\n, \nremove\n, \nremove_last\n \n\n\n\n\n\n\nremove_last(str, substr)\n\n\nReturns a copy of \nstr\n where the last instance of \nsubstr\n has been removed.\n\n\nSee also: \nremove_at\n, \nremove\n, \nremove_first\n \n\n\n\n\n\n\nreverse(str)\n\n\nReturns a new string with all the characters in \nstr\n in reversed order.\n\n\n\n\n\n\ninsert(str, pos, other)\n\n\nReturns a copy of \nstr\n with \nother\n inserted at position \npos\n\n\n\n\n\n\nsubstr(str, from, to)\n\n\nReturns the substring of \nstr\n starting at index \nfrom\n and ending at index \nto\n (inclusive). If \nto\n equals \n-1\n, returns\nthe substring from \nfrom\n until the end of the string.\n\n\nlocal s = \"c'\u00e9tait \u00e7a\"\n\nprint(string.substr(s, 3, 7)) -- \"\u00e9tait\"\nprint(string.substr(s, 3,-1)) -- \"\u00e9tait \u00e7a\"\n\n\n\n\n\n\n\n\n\nleft(str, n)\n\n\nGet the substring corresponding to the \nn\n first characters of the string. \n\n\n\n\n\n\nright(str, n)\n\n\nGet the substring corresponding to the \nn\n last characters of the string. \n\n\n\n\n\n\nfirst(str)\n\n\nGet the first character of the string.\n\n\n\n\n\n\nlast(str)\n\n\nGet the last character of the string.\n\n\n\n\n\n\njoin(strings, delim)\n\n\nReturns a new string which is the result of the concatenation of the strings in table \nstrings\n, separated by \ndelim\n. \n\n\n\n\n\n\nsplit(str, delim)\n\n\nReturns a table of strings which have been split at each occurrence of the substring \ndelim\n. If \ndelim\n is the empty\nstring, it returns a list of the characters in the string.",
            "title": "String manipulation"
        },
        {
            "location": "/scripting/api/string/index.html#string-manipulation",
            "text": "This page documents the  string  module.",
            "title": "String manipulation"
        },
        {
            "location": "/scripting/api/string/index.html#general-concepts",
            "text": "A  string  is a sequence of characters enclosed between double quotes, such as  \"this\" . Strings in Lua are immutable, which means that you cannot\nmodify them directly. All functions which \"modify\" a string actually return a new (modified) copy of the string but leave the original string unchanged.   All string functions assume that strings are encoded according to the UTF-8  Unicode  standard. A good tutorial about UTF-8 can be \nfound at the following address:  http://www.zehnet.de/2005/02/12/unicode-utf-8-tutorial . In the\nremainder of this document, the word  character  is used to mean  code point , unless otherwise noted.",
            "title": "General concepts"
        },
        {
            "location": "/scripting/api/string/index.html#application-programming-interface",
            "text": "",
            "title": "Application Programming Interface"
        },
        {
            "location": "/scripting/api/string/index.html#atstr-pos",
            "text": "Get character at position  pos .",
            "title": "at(str, pos)"
        },
        {
            "location": "/scripting/api/string/index.html#lenstr",
            "text": "Returns the length of the string, in Unicode code points.  local size = string.len(\"\uc548\ub155\ud558\uc138\uc694\")\nprint(size) -- Prints \"5\"  See also:  byte_count",
            "title": "len(str)"
        },
        {
            "location": "/scripting/api/string/index.html#byte_countstr",
            "text": "Returns the length of the string, in bytes (or Unicode code units). For strings encoded in ASCII (mostly, strings of English text with no \"special\" character), \neach code unit is represented with 1 byte, such that  bytecount  and  len  return the same result. For most other languages, however, the number of bytes and the \nnumber of code points will be different.  \nlocal english = \"hello\"\nlocal korean  = \"\uc548\ub155\ud558\uc138\uc694\"\n\nprint(string.len(english)) -- prints \"5\"\nprint(string.len(korean))  -- prints \"5\"\n\nprint(string.byte_count(english)) -- prints \"5\"\nprint(string.byte_count(korean))  -- prints \"15\"  See also:  len",
            "title": "byte_count(str)"
        },
        {
            "location": "/scripting/api/string/index.html#trimstr",
            "text": "Returns a copy of the string with whitespace characters removed at both ends of the string.   local s = \"\\t  hello  \\n\"\n\ns = string.trim(s)\nprint(\"$\" .. s .. \"$\") -- prints \"$hello$\"  See also:  ltrim ,  rtrim",
            "title": "trim(str)"
        },
        {
            "location": "/scripting/api/string/index.html#ltrimstr",
            "text": "Returns a copy of the string with whitespace characters removed at the left end of the string.   local s = \"  hello  \"\n\ns = string.ltrim(s)\nprint(\"$\" .. s .. \"$\") -- prints \"$hello  $\"  See also:  trim ,  rtrim",
            "title": "ltrim(str)"
        },
        {
            "location": "/scripting/api/string/index.html#rtrimstr",
            "text": "Returns a copy of the string with whitespace characters removed at the right end of the string.   local s = \"  hello  \"\n\ns = string.rtrim(s)\nprint(\"$\" .. s .. \"$\") -- prints \"$  hello$\"  See also:  ltrim ,  trim",
            "title": "rtrim(str)"
        },
        {
            "location": "/scripting/api/string/index.html#starts_withstr-prefix",
            "text": "Returns true if  str  starts with  prefix , and  false  otherwise.  See also:  ends_with",
            "title": "starts_with(str, prefix)"
        },
        {
            "location": "/scripting/api/string/index.html#ends_withstr-suffix",
            "text": "Returns true if  str  ends with  suffix , and  false  otherwise.  See also:  starts_with",
            "title": "ends_with(str, suffix)"
        },
        {
            "location": "/scripting/api/string/index.html#containsstr-substring",
            "text": "Returns true if  str  ends with  substring , and  false  otherwise.",
            "title": "contains(str, substring)"
        },
        {
            "location": "/scripting/api/string/index.html#countstr-substring",
            "text": "Returns the number of times  substring  appears in  str .   local s = \"cacococococa\"\nlocal count = string.count(s, \"coco\")\n\nprint(count) -- prints \"2\"  Note: matches don't overlap.",
            "title": "count(str, substring)"
        },
        {
            "location": "/scripting/api/string/index.html#to_upperstr",
            "text": "Returns a copy of  str  where each code point has been converted to upper case.   local s1 = \"c'\u00e9tait \u00e7a\"\nlocal s2 = string.to_upper(s1)\n\nprint(s2) -- prints \"C'\u00c9TAIT \u00c7A\"  See also:  to_lower",
            "title": "to_upper(str)"
        },
        {
            "location": "/scripting/api/string/index.html#to_lowerstr",
            "text": "Returns a copy of  str  where each code point has been converted to lower case.   local s1 = \"C'\u00c9TAIT \u00c7A\"\nlocal s2 = string.to_lower(s1)\n\nprint(s2) -- prints \"c'\u00e9tait \u00e7a\"  See also:  to_upper",
            "title": "to_lower(str)"
        },
        {
            "location": "/scripting/api/string/index.html#replacestr-old-new",
            "text": "Returns a copy of  str  where all (non-overlapping) instances of the substring  old  have been replaced by  new .  See also:   replace_at ,  replace_first ,  replace_last",
            "title": "replace(str, old, new)"
        },
        {
            "location": "/scripting/api/string/index.html#replace_atstr-at-count-new",
            "text": "Returns a copy of  str  where  count  code points, starting at position  at , have been replaced by  new .  See also:  replace ,  replace_first ,  replace_last",
            "title": "replace_at(str, at, count, new)"
        },
        {
            "location": "/scripting/api/string/index.html#replace_firststr-old-new",
            "text": "Returns a copy of  str  where the first instance of the substring  old  has been replaced by  new .  See also:   replace_at ,  replace ,  replace_last",
            "title": "replace_first(str, old, new)"
        },
        {
            "location": "/scripting/api/string/index.html#replace_laststr-old-new",
            "text": "Returns a copy of  str  where the last instance of the substring  old  has been replaced by  new .  See also:   replace_at ,  replace ,  replace_first",
            "title": "replace_last(str, old, new)"
        },
        {
            "location": "/scripting/api/string/index.html#concatstr1-str2",
            "text": "Create a new string which is the concatenation of  str1  and  str2 . In general, you should use Lua's built-in concatenation \noperator  ..  instead of this function.",
            "title": "concat(str1, str2)"
        },
        {
            "location": "/scripting/api/string/index.html#containsstr-substr",
            "text": "Returns true if  str  contains  substr  and false otherwise. If  substr  is the empty string, the result is true.",
            "title": "contains(str, substr)"
        },
        {
            "location": "/scripting/api/string/index.html#removestr-substr",
            "text": "Returns a copy of  str  where all (non-overlapping) instances of the substring  substr  have been removed.  See also:  remove_at ,  remove_first ,  remove_last",
            "title": "remove(str, substr)"
        },
        {
            "location": "/scripting/api/string/index.html#remove_atstr-at-count",
            "text": "Returns a copy of  str  where  count  code points, starting at position  at , have been removed.  See also:  remove ,  remove_first ,  remove_last",
            "title": "remove_at(str, at, count)"
        },
        {
            "location": "/scripting/api/string/index.html#remove_firststr-substr",
            "text": "Returns a copy of  str  where the first instance of  substr  has been removed.  See also:  remove_at ,  remove ,  remove_last",
            "title": "remove_first(str, substr)"
        },
        {
            "location": "/scripting/api/string/index.html#remove_laststr-substr",
            "text": "Returns a copy of  str  where the last instance of  substr  has been removed.  See also:  remove_at ,  remove ,  remove_first",
            "title": "remove_last(str, substr)"
        },
        {
            "location": "/scripting/api/string/index.html#reversestr",
            "text": "Returns a new string with all the characters in  str  in reversed order.",
            "title": "reverse(str)"
        },
        {
            "location": "/scripting/api/string/index.html#insertstr-pos-other",
            "text": "Returns a copy of  str  with  other  inserted at position  pos",
            "title": "insert(str, pos, other)"
        },
        {
            "location": "/scripting/api/string/index.html#substrstr-from-to",
            "text": "Returns the substring of  str  starting at index  from  and ending at index  to  (inclusive). If  to  equals  -1 , returns\nthe substring from  from  until the end of the string.  local s = \"c'\u00e9tait \u00e7a\"\n\nprint(string.substr(s, 3, 7)) -- \"\u00e9tait\"\nprint(string.substr(s, 3,-1)) -- \"\u00e9tait \u00e7a\"",
            "title": "substr(str, from, to)"
        },
        {
            "location": "/scripting/api/string/index.html#leftstr-n",
            "text": "Get the substring corresponding to the  n  first characters of the string.",
            "title": "left(str, n)"
        },
        {
            "location": "/scripting/api/string/index.html#rightstr-n",
            "text": "Get the substring corresponding to the  n  last characters of the string.",
            "title": "right(str, n)"
        },
        {
            "location": "/scripting/api/string/index.html#firststr",
            "text": "Get the first character of the string.",
            "title": "first(str)"
        },
        {
            "location": "/scripting/api/string/index.html#laststr",
            "text": "Get the last character of the string.",
            "title": "last(str)"
        },
        {
            "location": "/scripting/api/string/index.html#joinstrings-delim",
            "text": "Returns a new string which is the result of the concatenation of the strings in table  strings , separated by  delim .",
            "title": "join(strings, delim)"
        },
        {
            "location": "/scripting/api/string/index.html#splitstr-delim",
            "text": "Returns a table of strings which have been split at each occurrence of the substring  delim . If  delim  is the empty\nstring, it returns a list of the characters in the string.",
            "title": "split(str, delim)"
        },
        {
            "location": "/scripting/api/regex/index.html",
            "text": "Regular expressions\n\n\nThis page documents the \nregex\n module.\n\n\nGeneral concepts\n\n\nTODO...\n\n\nApplication Programming Interface\n\n\n\n\n\n\nnew(pattern)\n\n\nCreate and return a new regular expression (regex) from a string pattern. The regex can be matched against any string.\n\n\nlocal re = regex.new(\"^(..)\")\n-- Do something with re...\n\n\n\n\nSee also: \npattern\n\n\n\n\n\n\nmatch(re, subject)\n\n\nMatch regular expression \nre\n against string \nsubject\n. Returns \ntrue\n if there was a match, \nfalse\n otherwise.\n\n\nSee also: \ncount\n, \ncapture\n, \nhas_match\n\n\n\n\n\n\nhas_match(re)\n\n\nReturns \ntrue\n if the last call to \nmatch\n was sucessful, and \nfalse\n if was unsuccessful or if \nmatch\n was not called.\n\n\nSee also: \nmatch\n\n\n\n\n\n\ncapture(re, nth)\n\n\nReturns the \nnth\n captured sub-expression in the last successful call to \nmatch\n. If \nnth\n equals \n0\n, the whole matched string\nis returned, even if no sub-expression was captured. \n\n\nNote:\n This function returns an empty string if \nnth\n is greater than the number returned by the \ncount\n function.\n\n\nSee also: \ncount\n, \nmatch\n, \nfirst\n, \nlast\n\n\n\n\n\n\ncount(re)\n\n\nReturns the number of captured sub-expressions in the last call to \nmatch\n. This function returns 0 if there was no captured\nsub-expression, if there was no match or if \nmatch\n was not called.\n\n\nlocal re = regex.new(\"^a(...)(..)(..)\")\n\n-- Print \"bra\", \"ca\", \"da\"\nif regex.match(re, \"abracadabra\") then\n    for i=1, regex.count(re) do\n        local text = regex.capture(re, i)\n        print(text)\n    end       \nend\n\n\n\n\n\nSee also: \ncapture\n, \nmatch\n\n\n\n\n\n\npattern(re)\n\n\nReturns the pattern (as a \nstring\n) from which the \nre\n regular expression was constructed. \n\n\nSee also: \nnew\n\n\n\n\n\n\nfirst(re, nth)\n\n\nReturns the index of the first character of the \nnth\n capture. If \nnth\n equals \n0\n, \nit returns the index of the first character in the whole matched string.\n\n\nSee also: \ncapture\n, \nlast\n\n\n\n\n\n\nlast(re, nth)\n\n\nReturns the index of the last character of the \nnth\n capture. If \nnth\n equals \n0\n, \nit returns the index of the last character in the whole matched string.\n\n\nSee also: \ncapture\n, \nfirst",
            "title": "Regular expressions"
        },
        {
            "location": "/scripting/api/regex/index.html#regular-expressions",
            "text": "This page documents the  regex  module.",
            "title": "Regular expressions"
        },
        {
            "location": "/scripting/api/regex/index.html#general-concepts",
            "text": "TODO...",
            "title": "General concepts"
        },
        {
            "location": "/scripting/api/regex/index.html#application-programming-interface",
            "text": "",
            "title": "Application Programming Interface"
        },
        {
            "location": "/scripting/api/regex/index.html#newpattern",
            "text": "Create and return a new regular expression (regex) from a string pattern. The regex can be matched against any string.  local re = regex.new(\"^(..)\")\n-- Do something with re...  See also:  pattern",
            "title": "new(pattern)"
        },
        {
            "location": "/scripting/api/regex/index.html#matchre-subject",
            "text": "Match regular expression  re  against string  subject . Returns  true  if there was a match,  false  otherwise.  See also:  count ,  capture ,  has_match",
            "title": "match(re, subject)"
        },
        {
            "location": "/scripting/api/regex/index.html#has_matchre",
            "text": "Returns  true  if the last call to  match  was sucessful, and  false  if was unsuccessful or if  match  was not called.  See also:  match",
            "title": "has_match(re)"
        },
        {
            "location": "/scripting/api/regex/index.html#capturere-nth",
            "text": "Returns the  nth  captured sub-expression in the last successful call to  match . If  nth  equals  0 , the whole matched string\nis returned, even if no sub-expression was captured.   Note:  This function returns an empty string if  nth  is greater than the number returned by the  count  function.  See also:  count ,  match ,  first ,  last",
            "title": "capture(re, nth)"
        },
        {
            "location": "/scripting/api/regex/index.html#countre",
            "text": "Returns the number of captured sub-expressions in the last call to  match . This function returns 0 if there was no captured\nsub-expression, if there was no match or if  match  was not called.  local re = regex.new(\"^a(...)(..)(..)\")\n\n-- Print \"bra\", \"ca\", \"da\"\nif regex.match(re, \"abracadabra\") then\n    for i=1, regex.count(re) do\n        local text = regex.capture(re, i)\n        print(text)\n    end       \nend  See also:  capture ,  match",
            "title": "count(re)"
        },
        {
            "location": "/scripting/api/regex/index.html#patternre",
            "text": "Returns the pattern (as a  string ) from which the  re  regular expression was constructed.   See also:  new",
            "title": "pattern(re)"
        },
        {
            "location": "/scripting/api/regex/index.html#firstre-nth",
            "text": "Returns the index of the first character of the  nth  capture. If  nth  equals  0 , \nit returns the index of the first character in the whole matched string.  See also:  capture ,  last",
            "title": "first(re, nth)"
        },
        {
            "location": "/scripting/api/regex/index.html#lastre-nth",
            "text": "Returns the index of the last character of the  nth  capture. If  nth  equals  0 , \nit returns the index of the last character in the whole matched string.  See also:  capture ,  first",
            "title": "last(re, nth)"
        },
        {
            "location": "/scripting/api/signal/index.html",
            "text": "Event handling\n\n\nThis page documents the \nsignal\n module, which is responsible for event handling in Dolmen. \n\n\nGeneral concepts\n\n\nDolmen provides an event handling mechanism known as signal/slot. A signal corresponds to a unique identifier which can\nbe triggered when an event occurs, for instance when a button is clicked. A signal can be associated with any number of \nfunctions called \nslots\n, which may or may not return a value. Whenever a signal is \nemitted\n, all the slots which are\nconnected to it are executed (in an unspecified order). \n\n\nThis mechanism is used throughout Dolmen, as it provides hooks which plugins can use to react to events triggered by the\nprogram. For example, a signal is emitted whenever a file is loaded, which can be used to add custom metadata to each file, \namong other things.\n\n\nApplication Programming Interface\n\n\n\n\n\n\nnew()\n\n\nCreate and return a new signal identifier (id). Each id is guaranteed to be unique, such that two different calls to \nnew\n will never yield the same id.\n\n\nIf you need to store an id for subsequent use, store it in a (preferably local) variable.\n\n\nlocal my_event = signal.new()\n-- Do something with my_event...\n\n\n\n\n\n\n\n\nconnect(id, slot)\n\n\nConnect signal \nid\n to function \nslot\n. The slot can take any number of arguments, and can return a value.\n\n\nlocal e = signal.new()\n\nlocal f = function(name)\n    print(\"Hold the door, \" .. name)\nend\n\nsignal.connect(e, f)\n\n-- Print \"Hold the door, Hodor\" to the standard output\nsignal.emit(e, \"Hodor\")\n\n\n\n\nSee also: \ndisconnect\n, \nemit\n\n\n\n\n\n\ndisconnect(id, slot)\n\n\nDisconnect signal \nid\n from function \nslot\n. If \nid\n and \nslot\n are not connected, this function does nothing.\n\n\nlocal e = signal.new()\n\nlocal f = function(name)\n    print(\"Hold the door, \" .. name)\nend\n\nsignal.connect(evt, f)\n\n-- Print \"Hold the door, Hodor\" to the standard output\nsignal.emit(e, \"Hodor\")\n\nsignal.disconnect(e, f)\n\n-- Do nothing since e and f are no longer connected\nsignal.emit(e, \"Hodor\")\n\n\n\n\n\nSee also: \nconnect\n, \nemit\n\n\n\n\n\n\nemit(id, ...)\n\n\nEmit signal \nid\n, followed by any number of arguments. The arguments are forwarded to all the slots which are connected to this signal (if any). \nFollowing Lua's function call conventions, if the slot receives less arguments than it expects, missing arguments have the value \nnil\n; if it receives more arguments than expected, additional arguments are ignored.\n\n\nThis function collects all the return values from the slots it called into a table, which it returns to the caller. (Keep in mind that if a slot doesn't explicitly return a value, its\nreturn value is \nnil\n.) \n\n\nlocal e = signal.new()\n\nlocal f1 = function(arg1)\n    print(\"f1 received a \" .. type(arg1))\nend\n\nlocal f2 = function(arg1, arg2)\n    print(\"f2 received a \" .. type(arg1) \" and a \" .. type(arg2))\nend\n\nsignal.connect(e, f1)\nsignal.connect(e, f2)\n\n-- Print \"f1 received a number\" and \"f2 received a number and a string\"\nsignal.emit(e, 3.14, \"pi\")\n\n\n\n\nNote: the order in which slots are called is unspecified. In general, it will correspond to the order in which they were\nregistered, but this should not be relied upon.  \n\n\nSee also: \nconnect\n, \ndisconnect",
            "title": "Event handling"
        },
        {
            "location": "/scripting/api/signal/index.html#event-handling",
            "text": "This page documents the  signal  module, which is responsible for event handling in Dolmen.",
            "title": "Event handling"
        },
        {
            "location": "/scripting/api/signal/index.html#general-concepts",
            "text": "Dolmen provides an event handling mechanism known as signal/slot. A signal corresponds to a unique identifier which can\nbe triggered when an event occurs, for instance when a button is clicked. A signal can be associated with any number of \nfunctions called  slots , which may or may not return a value. Whenever a signal is  emitted , all the slots which are\nconnected to it are executed (in an unspecified order).   This mechanism is used throughout Dolmen, as it provides hooks which plugins can use to react to events triggered by the\nprogram. For example, a signal is emitted whenever a file is loaded, which can be used to add custom metadata to each file, \namong other things.",
            "title": "General concepts"
        },
        {
            "location": "/scripting/api/signal/index.html#application-programming-interface",
            "text": "",
            "title": "Application Programming Interface"
        },
        {
            "location": "/scripting/api/signal/index.html#new",
            "text": "Create and return a new signal identifier (id). Each id is guaranteed to be unique, such that two different calls to  new  will never yield the same id.  If you need to store an id for subsequent use, store it in a (preferably local) variable.  local my_event = signal.new()\n-- Do something with my_event...",
            "title": "new()"
        },
        {
            "location": "/scripting/api/signal/index.html#connectid-slot",
            "text": "Connect signal  id  to function  slot . The slot can take any number of arguments, and can return a value.  local e = signal.new()\n\nlocal f = function(name)\n    print(\"Hold the door, \" .. name)\nend\n\nsignal.connect(e, f)\n\n-- Print \"Hold the door, Hodor\" to the standard output\nsignal.emit(e, \"Hodor\")  See also:  disconnect ,  emit",
            "title": "connect(id, slot)"
        },
        {
            "location": "/scripting/api/signal/index.html#disconnectid-slot",
            "text": "Disconnect signal  id  from function  slot . If  id  and  slot  are not connected, this function does nothing.  local e = signal.new()\n\nlocal f = function(name)\n    print(\"Hold the door, \" .. name)\nend\n\nsignal.connect(evt, f)\n\n-- Print \"Hold the door, Hodor\" to the standard output\nsignal.emit(e, \"Hodor\")\n\nsignal.disconnect(e, f)\n\n-- Do nothing since e and f are no longer connected\nsignal.emit(e, \"Hodor\")  See also:  connect ,  emit",
            "title": "disconnect(id, slot)"
        },
        {
            "location": "/scripting/api/signal/index.html#emitid",
            "text": "Emit signal  id , followed by any number of arguments. The arguments are forwarded to all the slots which are connected to this signal (if any). \nFollowing Lua's function call conventions, if the slot receives less arguments than it expects, missing arguments have the value  nil ; if it receives more arguments than expected, additional arguments are ignored.  This function collects all the return values from the slots it called into a table, which it returns to the caller. (Keep in mind that if a slot doesn't explicitly return a value, its\nreturn value is  nil .)   local e = signal.new()\n\nlocal f1 = function(arg1)\n    print(\"f1 received a \" .. type(arg1))\nend\n\nlocal f2 = function(arg1, arg2)\n    print(\"f2 received a \" .. type(arg1) \" and a \" .. type(arg2))\nend\n\nsignal.connect(e, f1)\nsignal.connect(e, f2)\n\n-- Print \"f1 received a number\" and \"f2 received a number and a string\"\nsignal.emit(e, 3.14, \"pi\")  Note: the order in which slots are called is unspecified. In general, it will correspond to the order in which they were\nregistered, but this should not be relied upon.    See also:  connect ,  disconnect",
            "title": "emit(id, ...)"
        },
        {
            "location": "/scripting/api/shell/index.html",
            "text": "Shell\n\n\nThis page documents the \nshell\n module.\n\n\nGeneral concepts\n\n\nThe shell represents Dolmen's user interface. The following functions let you use user interface elements\n (such as dialogs) in order to facilitate interaction with users of your scripts. \n\n\nApplication Programming Interface\n\n\n\n\n\n\nwarning(message)\n\n\nDisplays a warning dialog.\n\n\nSee also: \nalert\n\n\n\n\n\n\nalert(message)\n\n\nDisplays an error dialog. This can be used for critical errors.\n\n\nSee also: \nwarning\n\n\n\n\n\n\nopen_file_dialog(message)\n\n\nDisplays a dialog that lets the user select a file.\n\n\nSee also: \nsave_file_dialog\n, \nopen_directory_dialog\n\n\n\n\n\n\nsave_file_dialog(message)\n\n\nDisplays a dialog that lets the user choose a path to save a file.\n\n\nSee also: \nopen_file_dialog\n, \nopen_directory_dialog\n\n\n\n\n\n\nopen_directory_dialog(message)\n\n\nDisplays a dialog that lets the user select a directory.\n\n\nSee also: \nsave_file_dialog\n, \nopen_file_dialog\n\n\n\n\n\n\nstatus(message, timeout)\n\n\nDisplays \nmessage\n in the status bar for \ntimeout\n seconds. If \ntimeout\n is \n0\n, the message is displayed until the next one appears.",
            "title": "User interface"
        },
        {
            "location": "/scripting/api/shell/index.html#shell",
            "text": "This page documents the  shell  module.",
            "title": "Shell"
        },
        {
            "location": "/scripting/api/shell/index.html#general-concepts",
            "text": "The shell represents Dolmen's user interface. The following functions let you use user interface elements\n (such as dialogs) in order to facilitate interaction with users of your scripts.",
            "title": "General concepts"
        },
        {
            "location": "/scripting/api/shell/index.html#application-programming-interface",
            "text": "",
            "title": "Application Programming Interface"
        },
        {
            "location": "/scripting/api/shell/index.html#warningmessage",
            "text": "Displays a warning dialog.  See also:  alert",
            "title": "warning(message)"
        },
        {
            "location": "/scripting/api/shell/index.html#alertmessage",
            "text": "Displays an error dialog. This can be used for critical errors.  See also:  warning",
            "title": "alert(message)"
        },
        {
            "location": "/scripting/api/shell/index.html#open_file_dialogmessage",
            "text": "Displays a dialog that lets the user select a file.  See also:  save_file_dialog ,  open_directory_dialog",
            "title": "open_file_dialog(message)"
        },
        {
            "location": "/scripting/api/shell/index.html#save_file_dialogmessage",
            "text": "Displays a dialog that lets the user choose a path to save a file.  See also:  open_file_dialog ,  open_directory_dialog",
            "title": "save_file_dialog(message)"
        },
        {
            "location": "/scripting/api/shell/index.html#open_directory_dialogmessage",
            "text": "Displays a dialog that lets the user select a directory.  See also:  save_file_dialog ,  open_file_dialog",
            "title": "open_directory_dialog(message)"
        },
        {
            "location": "/scripting/api/shell/index.html#statusmessage-timeout",
            "text": "Displays  message  in the status bar for  timeout  seconds. If  timeout  is  0 , the message is displayed until the next one appears.",
            "title": "status(message, timeout)"
        },
        {
            "location": "/about/release-notes/index.html",
            "text": "Changelog for Dolmen\n\n\nVersion 1.9 (25/8/2017)\n\n\n\n\nSmall changes in the user interface\n\n\nlua scripting engine\n\n\nNew regular expression engine\n\n\nNew documentation\n\n\nRemoved obsolete UNIX pattern search syntax\n\n\nFixed freeze with open/save dialogs on Linux (Qt5)\n\n\nAdded Conc menu\n\n\nAuto-detection of Unicode encoding (defaults to UTF-8 if no BOM is present)\n\n\nMetadata panel can now be resized\n\n\nRemoved greedy search check box (use quantifiers in regular expressions instead)\n\n\nBookmarks can now be opened in Praat\n\n\nFixed bug which caused the content of an annotation to be loaded multiple times when there were bookmarks in a project\n\n\nFixed crash which occurred when switching between projects\n\n\nFixed minor memory leak (finalization of grammars)\n\n\nLicense is now GPL version 3, with an exception for plugins\n\n\nNew icon theme (courtesy \nicons8.com\n)\n\n\nReplaced output tab with a (hideable) status bar\n\n\n\n\nVersion 1.3.3 (24/5/2016)\n\n\n\n\nfixed encoding when exporting search results to CSV\n\n\nminor bug fixes\n\n\n\n\nVersion 1.3.2 (8/5/2016)\n\n\n\n\nminor bug fixes\n\n\n\n\nVersion 1.3.1 (28/04/2016)\n\n\n\n\nquery results are now sorted\n\n\n\n\nVersion 1.3 (12/9/2014)\n\n\n\n\nfixed bug in sound playing on Windows and Linux\n\n\nimport metadata from CSV file\n\n\nfixed a bug introduced in version 1.2 that made Dolmen crash when loading a project that contains bookmarks\n\n\nnow built on top of Qt5\n\n\nbetter compatibility with recent version of Mac OS X (now requires 10.7 or later)\n\n\nplugin tabs are no longer displayed in random order\n\n\nupdated RtAudio to version 4.1.1\n\n\nminor fixes and improvements\n\n\n\n\nVersion 1.2 (1/9/2013)\n\n\n\n\nimprovements to sound and annotation views\n\n\nsound can be browsed with keyboard arrows in sound and annotation views\n\n\nfaster loading of projects (annotations are now opened lazily)\n\n\nupdated RtAudio to version 4.0.12\n\n\nRtAudio and libsndfile versions are now displayed in Help > Sound information\n\n\nthe source code can now be compiled with Qt4 or Qt5\n\n\nsearch by tier name now uses regular expressions instead of string comparison\n\n\nsearch grammars can now define a \"tier selecting\" field to search a pattern across different tiers\n\n\nfixed compiler warnings\n\n\nminor fixes and enhancements\n\n\n\n\nVersion 1.1 (1/7/2013)\n\n\n\n\nupdated code to use Qwt 6.1 to prepare the transition to Qt 5 (Qwt is no longer included and must be provided externally)\n\n\nsound can now be played/paused with the space bar and stopped with Esc in sound and annotation views\n\n\nplots are now antialiased by default (this can be turned off in the preference editor)\n\n\nminor code clean-up's\n\n\nnew icon\n\n\n\n\nVersion 1.0.4 (21/02/2013)\n\n\n\n\nWindows only: added msvcp100.dll, for systems that don\u2019t have it.\n\n\n\n\nVersion 1.0.3 (16/02/2013)\n\n\n\n\nprevent Dolmen from crashing when displaying a short sound file in a view\n\n\n\n\nVersion 1.0.2 (15/02/2013)\n\n\n\n\nFixes audio playback of stereo files on Windows and Linux\n\n\n\n\nVersion 1.0.1 (16/12/2012)\n\n\n\n\nfixed a bug that happened when opening intervals shorter than 100 ms in Praat\n\n\nthe tier name fied is now properly hidden in the search window when the files are Documents\n\n\n\n\nVersion 1.0 (15/12/2012)\n\n\n\n\nannotator comparison for search grammars (requires an \"Annotator\" property)\n\n\nSearch by tier name instead of tier number\n\n\ncode modified so that it compiles with MSVC2010\n\n\nupdated libsndfile to 1.0.25 on Windows\n\n\n\n\nVersion 0.9.9 (21/10/2012)\n\n\n\n\nQwt is no longer required as an external dependency (v5.2.2 has been included in Dolmen's source code)\n\n\nupdated Qt to v 4.8.3 on Windows \n\n\n\n\nVersion 0.9.8 (18/10/2012)\n\n\n\n\nimproved sound playback on Mac OS X and Linux (updated RTAudio to v 4.0.11)\n\n\nfixed selection rectangle in waveforms on Linux\n\n\nupdated Qt to v 4.8.3 on Mac OS X\n\n\nrefactoring of the output console\n\n\n\n\nVersion 0.9.7.2 (04/05/2012)\n\n\n\n\nfixed a deployment bug on Windows (SQL plugin)\n\n\nerror message if the database fails to open\n\n\n\n\nVersion 0.9.7 (23/04/2012)\n\n\n\n\ndata tables (DMT files). Data tables can be created from a query view (right click on a query match > Create table view)\n\n\noption for greedy search in the main search window\n\n\nminor improvements and bug fixes\n\n\n\n\nVersion 0.9.6 (14/04/2012)\n\n\n\n\nsupport for user-defined plugins (written in JavaScript/JSON)\n\n\ncleaner check list boxes (mostly used in search window and gauge tool)\n\n\ndisabled internal debug messages\n\n\n\n\nVersion 0.9.5 (08/04/2012)\n\n\nThis version brings a significant number of changes and improvements:\n\n metadata is now displayed in a permanent widget on the right-hand side.\n\n metadata is now stored in an SQLite database instead of DMM files\n\n tags have been renamed to \"properties\".\n\n redesigned property editor which makes editing properties much simpler\n\n on Mac, the application data folder has been moved from \u201c~/Library\u201d to \u201c~/Application Support\u201d\n\n resampling now uses speex instead of libsamplerate\n\n support for Document files (plain text files) along with Annotations\n\n bug fixes and usability improvements\n\n\nVersion 0.9.4 (03/03/2012)\n\n\n\n\nprevent a crash when using the arrow keys in a query view\n\n\ntags are now properly refreshed in the metadata editor\n\n\n\n\nVersion 0.9.3 (02/03/2012)\n\n\n\n\nfixes bugs in regular expression and plain text search\n\n\nprevent Dolmen from crashing when playing a new search match while the previous one hasn\u2019t finished playing\n\n\nsearch results can now be browsed using keyboard arrows\n\n\n\n\nVersion 0.9.2 (28/01/2012)\n\n\n\n\nnew version (mac only): fixes a crash when playing a sound \n\n\nupdated RTAudio to 4.0.10\n\n\nthe Mac version is now linked against Qt 4.8\n\n\n\n\nVersion 0.9.1 (21/08/2011)\n\n\n\n\nfixed a bug that made Dolmen crash when loading a new project if the previous one had bookmarks\n\n\nadded icons for surveys and speakers in the file browser\n\n\nitems can now be edited from query views (right click, then \"Edit item text...\")\n\n\nthe Linux version is now distributed as Debian packages (Debian stable)\n\n\nminor bug fixes and improvements\n\n\n\n\nVersion 0.9.0 (19/08/2011)\n\n\n\n\nimplementation of tiers in annotation views (can read and edit text of Praat tiers) \n\n\nmuch smoother scrolling of waveform\n\n\nwaveforms can now be scrolled with the mouse wheel\n\n\nnew metadata editor, available from annotation and sound views, as well as from the file browser (right click on an item)\n\n\nnew shortcuts to hide the left sidebar (ctrl+shift+L) and the bottom tabs (ctrl+shift+b)\n\n\nupdated support for Praat point tiers (if you have old files with points, it is best to open and resave them in Praat)\n\n\nminor improvements to the side bar on Mac OS X\n\n\n\n\nVersion 0.8.3 (08/08/2011)\n\n\n\n\nSound views now indicate the current position while a file is playing\n\n\nRemoved Webkit dependency\n\n\nThe Mac version is now built statically and is much smaller as a result\n\n\n\n\nVersion 0.8.2 (06/08/2011)\n\n\n\n\nSound can now be paused in sound views\n\n\nImproved audio output of mono files on Mac OS X\n\n\n\n\nVersion 0.8.1 (23/07/2011)\n\n\n\n\nFixed a bug that caused Dolmen to crash on Mac and Linux when playing a sound file containing non-ASCII characters in its path\n\n\nFixed a bug that caused Dolmen to freeze on Windows when interrupting playing\n\n\n\n\nVersion 0.8.0   (16/07/2011)\n\n\n\n\nthe sound stack has been rewritten and now uses libsndfile and RTAudio instead of libsox. \n\n\ninitial support for waveforms in sound and annotation views (mono files)\n\n\nnew tool \"Compare speakers or subjects...\"\n\n\nexport to CSV (spreadsheet format)\n\n\nbookmarks\n\n\nopen files in Praat from the file browser\n\n\nnew command \"save project as...\" \n\n\nthe system tab \"metadata\" has been removed (metadata is now shown in tool tips in the file browser or in the viewer when opening a file)\n\n\nsimplified search window\n\n\n\n\nVersion 0.7.2 (20/03/2011)\n\n\n\n\nfixed display of results in query view when hovering the mouse cursor over items\n\n\nbetter Linux support\n\n\n\n\nVersion 0.7.1 (05/03/2011)\n\n\n\n\nread WaveSurfer label files (*.lab)\n\n\nexport tiers of DMF files to TextGrid\n\n\nTextGrid files that contain text fields spanning over several lines are now properly parsed \n\n\n\n\nVersion 0.7.0 (04/03/2011)\n\n\nThis version brings many improvements across the board:\n\n\n\n\nsendpraat and sox have been included in the source code and are no longer neeeded as external dependencies\n\n\ncross-tier search\n\n\nthe preference editor has been simplified and reorganized\n\n\nHTML rendering now uses the WebKit engine\n\n\nthe documentation has been overhauled and is now available in HTML from within Dolmen, instead of a PDF file. \n\n\nmany more sound file formats are supported out of the box (still no MP3 nor OGG though)\n\n\nthe most recent project can now be opened with ctrl+shift+o\n\n\nminor bug fixes\n\n\n\n\nVersion 0.6.5 (19/02/2011)\n\n\nFeatures:         \n\n\n added project versioning (Edit > Project Properties...)\n\n can now open TextGrid without sound in Praat\n\n added search variables %LINE, %WORD, and symbols '#' (word boundary), '#\n' (prefix) and '\n#' (suffix).\n\n documentation for regular expressions\n\n\nBug fixes/improvements:\n\n removed \"Open selection in Praat\" from Tools menu (which has been disabled for now)\n\n parentheses can now be used in search pattern (they still need to be escaped in regular expressions)\n* fixed identification of the tier when opening in Praat\n\n\nVersion 0.6.4 (12/02/2011)\n\n\n\n\nThe description field is now searchable in the search window.\n\n\nTags can be hidden in the search window\n\n\nPFC/PAC goodies (see documentation)              \n\n\n\n\nVersion 0.6.3 (09/02/2011)\n\n\n\n\nFirst public version.\n\n\n\n\nDevelopment of the C++ version started in early August 2011. A python proof-of-concept was sketched out in April/May 2011\nDolmen is a complete redesign of the PFC platform (2006/2008), a concordancer implemented in Python and specifically written for the PFC project (www.projet-pfc.net).",
            "title": "Release notes"
        },
        {
            "location": "/about/release-notes/index.html#changelog-for-dolmen",
            "text": "",
            "title": "Changelog for Dolmen"
        },
        {
            "location": "/about/release-notes/index.html#version-19-2582017",
            "text": "Small changes in the user interface  lua scripting engine  New regular expression engine  New documentation  Removed obsolete UNIX pattern search syntax  Fixed freeze with open/save dialogs on Linux (Qt5)  Added Conc menu  Auto-detection of Unicode encoding (defaults to UTF-8 if no BOM is present)  Metadata panel can now be resized  Removed greedy search check box (use quantifiers in regular expressions instead)  Bookmarks can now be opened in Praat  Fixed bug which caused the content of an annotation to be loaded multiple times when there were bookmarks in a project  Fixed crash which occurred when switching between projects  Fixed minor memory leak (finalization of grammars)  License is now GPL version 3, with an exception for plugins  New icon theme (courtesy  icons8.com )  Replaced output tab with a (hideable) status bar",
            "title": "Version 1.9 (25/8/2017)"
        },
        {
            "location": "/about/release-notes/index.html#version-133-2452016",
            "text": "fixed encoding when exporting search results to CSV  minor bug fixes",
            "title": "Version 1.3.3 (24/5/2016)"
        },
        {
            "location": "/about/release-notes/index.html#version-132-852016",
            "text": "minor bug fixes",
            "title": "Version 1.3.2 (8/5/2016)"
        },
        {
            "location": "/about/release-notes/index.html#version-131-28042016",
            "text": "query results are now sorted",
            "title": "Version 1.3.1 (28/04/2016)"
        },
        {
            "location": "/about/release-notes/index.html#version-13-1292014",
            "text": "fixed bug in sound playing on Windows and Linux  import metadata from CSV file  fixed a bug introduced in version 1.2 that made Dolmen crash when loading a project that contains bookmarks  now built on top of Qt5  better compatibility with recent version of Mac OS X (now requires 10.7 or later)  plugin tabs are no longer displayed in random order  updated RtAudio to version 4.1.1  minor fixes and improvements",
            "title": "Version 1.3 (12/9/2014)"
        },
        {
            "location": "/about/release-notes/index.html#version-12-192013",
            "text": "improvements to sound and annotation views  sound can be browsed with keyboard arrows in sound and annotation views  faster loading of projects (annotations are now opened lazily)  updated RtAudio to version 4.0.12  RtAudio and libsndfile versions are now displayed in Help > Sound information  the source code can now be compiled with Qt4 or Qt5  search by tier name now uses regular expressions instead of string comparison  search grammars can now define a \"tier selecting\" field to search a pattern across different tiers  fixed compiler warnings  minor fixes and enhancements",
            "title": "Version 1.2 (1/9/2013)"
        },
        {
            "location": "/about/release-notes/index.html#version-11-172013",
            "text": "updated code to use Qwt 6.1 to prepare the transition to Qt 5 (Qwt is no longer included and must be provided externally)  sound can now be played/paused with the space bar and stopped with Esc in sound and annotation views  plots are now antialiased by default (this can be turned off in the preference editor)  minor code clean-up's  new icon",
            "title": "Version 1.1 (1/7/2013)"
        },
        {
            "location": "/about/release-notes/index.html#version-104-21022013",
            "text": "Windows only: added msvcp100.dll, for systems that don\u2019t have it.",
            "title": "Version 1.0.4 (21/02/2013)"
        },
        {
            "location": "/about/release-notes/index.html#version-103-16022013",
            "text": "prevent Dolmen from crashing when displaying a short sound file in a view",
            "title": "Version 1.0.3 (16/02/2013)"
        },
        {
            "location": "/about/release-notes/index.html#version-102-15022013",
            "text": "Fixes audio playback of stereo files on Windows and Linux",
            "title": "Version 1.0.2 (15/02/2013)"
        },
        {
            "location": "/about/release-notes/index.html#version-101-16122012",
            "text": "fixed a bug that happened when opening intervals shorter than 100 ms in Praat  the tier name fied is now properly hidden in the search window when the files are Documents",
            "title": "Version 1.0.1 (16/12/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-10-15122012",
            "text": "annotator comparison for search grammars (requires an \"Annotator\" property)  Search by tier name instead of tier number  code modified so that it compiles with MSVC2010  updated libsndfile to 1.0.25 on Windows",
            "title": "Version 1.0 (15/12/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-099-21102012",
            "text": "Qwt is no longer required as an external dependency (v5.2.2 has been included in Dolmen's source code)  updated Qt to v 4.8.3 on Windows",
            "title": "Version 0.9.9 (21/10/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-098-18102012",
            "text": "improved sound playback on Mac OS X and Linux (updated RTAudio to v 4.0.11)  fixed selection rectangle in waveforms on Linux  updated Qt to v 4.8.3 on Mac OS X  refactoring of the output console",
            "title": "Version 0.9.8 (18/10/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-0972-04052012",
            "text": "fixed a deployment bug on Windows (SQL plugin)  error message if the database fails to open",
            "title": "Version 0.9.7.2 (04/05/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-097-23042012",
            "text": "data tables (DMT files). Data tables can be created from a query view (right click on a query match > Create table view)  option for greedy search in the main search window  minor improvements and bug fixes",
            "title": "Version 0.9.7 (23/04/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-096-14042012",
            "text": "support for user-defined plugins (written in JavaScript/JSON)  cleaner check list boxes (mostly used in search window and gauge tool)  disabled internal debug messages",
            "title": "Version 0.9.6 (14/04/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-095-08042012",
            "text": "This version brings a significant number of changes and improvements:  metadata is now displayed in a permanent widget on the right-hand side.  metadata is now stored in an SQLite database instead of DMM files  tags have been renamed to \"properties\".  redesigned property editor which makes editing properties much simpler  on Mac, the application data folder has been moved from \u201c~/Library\u201d to \u201c~/Application Support\u201d  resampling now uses speex instead of libsamplerate  support for Document files (plain text files) along with Annotations  bug fixes and usability improvements",
            "title": "Version 0.9.5 (08/04/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-094-03032012",
            "text": "prevent a crash when using the arrow keys in a query view  tags are now properly refreshed in the metadata editor",
            "title": "Version 0.9.4 (03/03/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-093-02032012",
            "text": "fixes bugs in regular expression and plain text search  prevent Dolmen from crashing when playing a new search match while the previous one hasn\u2019t finished playing  search results can now be browsed using keyboard arrows",
            "title": "Version 0.9.3 (02/03/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-092-28012012",
            "text": "new version (mac only): fixes a crash when playing a sound   updated RTAudio to 4.0.10  the Mac version is now linked against Qt 4.8",
            "title": "Version 0.9.2 (28/01/2012)"
        },
        {
            "location": "/about/release-notes/index.html#version-091-21082011",
            "text": "fixed a bug that made Dolmen crash when loading a new project if the previous one had bookmarks  added icons for surveys and speakers in the file browser  items can now be edited from query views (right click, then \"Edit item text...\")  the Linux version is now distributed as Debian packages (Debian stable)  minor bug fixes and improvements",
            "title": "Version 0.9.1 (21/08/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-090-19082011",
            "text": "implementation of tiers in annotation views (can read and edit text of Praat tiers)   much smoother scrolling of waveform  waveforms can now be scrolled with the mouse wheel  new metadata editor, available from annotation and sound views, as well as from the file browser (right click on an item)  new shortcuts to hide the left sidebar (ctrl+shift+L) and the bottom tabs (ctrl+shift+b)  updated support for Praat point tiers (if you have old files with points, it is best to open and resave them in Praat)  minor improvements to the side bar on Mac OS X",
            "title": "Version 0.9.0 (19/08/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-083-08082011",
            "text": "Sound views now indicate the current position while a file is playing  Removed Webkit dependency  The Mac version is now built statically and is much smaller as a result",
            "title": "Version 0.8.3 (08/08/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-082-06082011",
            "text": "Sound can now be paused in sound views  Improved audio output of mono files on Mac OS X",
            "title": "Version 0.8.2 (06/08/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-081-23072011",
            "text": "Fixed a bug that caused Dolmen to crash on Mac and Linux when playing a sound file containing non-ASCII characters in its path  Fixed a bug that caused Dolmen to freeze on Windows when interrupting playing",
            "title": "Version 0.8.1 (23/07/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-080-16072011",
            "text": "the sound stack has been rewritten and now uses libsndfile and RTAudio instead of libsox.   initial support for waveforms in sound and annotation views (mono files)  new tool \"Compare speakers or subjects...\"  export to CSV (spreadsheet format)  bookmarks  open files in Praat from the file browser  new command \"save project as...\"   the system tab \"metadata\" has been removed (metadata is now shown in tool tips in the file browser or in the viewer when opening a file)  simplified search window",
            "title": "Version 0.8.0   (16/07/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-072-20032011",
            "text": "fixed display of results in query view when hovering the mouse cursor over items  better Linux support",
            "title": "Version 0.7.2 (20/03/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-071-05032011",
            "text": "read WaveSurfer label files (*.lab)  export tiers of DMF files to TextGrid  TextGrid files that contain text fields spanning over several lines are now properly parsed",
            "title": "Version 0.7.1 (05/03/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-070-04032011",
            "text": "This version brings many improvements across the board:   sendpraat and sox have been included in the source code and are no longer neeeded as external dependencies  cross-tier search  the preference editor has been simplified and reorganized  HTML rendering now uses the WebKit engine  the documentation has been overhauled and is now available in HTML from within Dolmen, instead of a PDF file.   many more sound file formats are supported out of the box (still no MP3 nor OGG though)  the most recent project can now be opened with ctrl+shift+o  minor bug fixes",
            "title": "Version 0.7.0 (04/03/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-065-19022011",
            "text": "Features:            added project versioning (Edit > Project Properties...)  can now open TextGrid without sound in Praat  added search variables %LINE, %WORD, and symbols '#' (word boundary), '# ' (prefix) and ' #' (suffix).  documentation for regular expressions  Bug fixes/improvements:  removed \"Open selection in Praat\" from Tools menu (which has been disabled for now)  parentheses can now be used in search pattern (they still need to be escaped in regular expressions)\n* fixed identification of the tier when opening in Praat",
            "title": "Version 0.6.5 (19/02/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-064-12022011",
            "text": "The description field is now searchable in the search window.  Tags can be hidden in the search window  PFC/PAC goodies (see documentation)",
            "title": "Version 0.6.4 (12/02/2011)"
        },
        {
            "location": "/about/release-notes/index.html#version-063-09022011",
            "text": "First public version.   Development of the C++ version started in early August 2011. A python proof-of-concept was sketched out in April/May 2011\nDolmen is a complete redesign of the PFC platform (2006/2008), a concordancer implemented in Python and specifically written for the PFC project (www.projet-pfc.net).",
            "title": "Version 0.6.3 (09/02/2011)"
        },
        {
            "location": "/about/license/index.html",
            "text": "GNU GENERAL PUBLIC LICENSE\n\n\nVersion 3, 29 June 2007\n\n\nCopyright \u00a9 2007 Free Software Foundation, Inc. <\nhttp://fsf.org/\n>\n\n\nEveryone is permitted to copy and distribute verbatim copies of this license\ndocument, but changing it is not allowed.\n\n\nPreamble\n\n\nThe GNU General Public License is a free, copyleft license for software and other\nkinds of works.\n\n\nThe licenses for most software and other practical works are designed to take away\nyour freedom to share and change the works. By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change all versions of a\nprogram--to make sure it remains free software for all its users. We, the Free\nSoftware Foundation, use the GNU General Public License for most of our software; it\napplies also to any other work released this way by its authors. You can apply it to\nyour programs, too.\n\n\nWhen we speak of free software, we are referring to freedom, not price. Our General\nPublic Licenses are designed to make sure that you have the freedom to distribute\ncopies of free software (and charge for them if you wish), that you receive source\ncode or can get it if you want it, that you can change the software or use pieces of\nit in new free programs, and that you know you can do these things.\n\n\nTo protect your rights, we need to prevent others from denying you these rights or\nasking you to surrender the rights. Therefore, you have certain responsibilities if\nyou distribute copies of the software, or if you modify it: responsibilities to\nrespect the freedom of others.\n\n\nFor example, if you distribute copies of such a program, whether gratis or for a fee,\nyou must pass on to the recipients the same freedoms that you received. You must make\nsure that they, too, receive or can get the source code. And you must show them these\nterms so they know their rights.\n\n\nDevelopers that use the GNU GPL protect your rights with two steps: (1) assert\ncopyright on the software, and (2) offer you this License giving you legal permission\nto copy, distribute and/or modify it.\n\n\nFor the developers' and authors' protection, the GPL clearly explains that there is\nno warranty for this free software. For both users' and authors' sake, the GPL\nrequires that modified versions be marked as changed, so that their problems will not\nbe attributed erroneously to authors of previous versions.\n\n\nSome devices are designed to deny users access to install or run modified versions of\nthe software inside them, although the manufacturer can do so. This is fundamentally\nincompatible with the aim of protecting users' freedom to change the software. The\nsystematic pattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable. Therefore, we have designed\nthis version of the GPL to prohibit the practice for those products. If such problems\narise substantially in other domains, we stand ready to extend this provision to\nthose domains in future versions of the GPL, as needed to protect the freedom of\nusers.\n\n\nFinally, every program is threatened constantly by software patents. States should\nnot allow patents to restrict development and use of software on general-purpose\ncomputers, but in those that do, we wish to avoid the special danger that patents\napplied to a free program could make it effectively proprietary. To prevent this, the\nGPL assures that patents cannot be used to render the program non-free.\n\n\nThe precise terms and conditions for copying, distribution and modification follow.\n\n\nTERMS AND CONDITIONS\n\n\n0. Definitions.\n\n\n\u201cThis License\u201d refers to version 3 of the GNU General Public License.\n\n\n\u201cCopyright\u201d also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n\n\u201cThe Program\u201d refers to any copyrightable work licensed under this\nLicense. Each licensee is addressed as \u201cyou\u201d. \u201cLicensees\u201d and\n\u201crecipients\u201d may be individuals or organizations.\n\n\nTo \u201cmodify\u201d a work means to copy from or adapt all or part of the work in\na fashion requiring copyright permission, other than the making of an exact copy. The\nresulting work is called a \u201cmodified version\u201d of the earlier work or a\nwork \u201cbased on\u201d the earlier work.\n\n\nA \u201ccovered work\u201d means either the unmodified Program or a work based on\nthe Program.\n\n\nTo \u201cpropagate\u201d a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for infringement under\napplicable copyright law, except executing it on a computer or modifying a private\ncopy. Propagation includes copying, distribution (with or without modification),\nmaking available to the public, and in some countries other activities as well.\n\n\nTo \u201cconvey\u201d a work means any kind of propagation that enables other\nparties to make or receive copies. Mere interaction with a user through a computer\nnetwork, with no transfer of a copy, is not conveying.\n\n\nAn interactive user interface displays \u201cAppropriate Legal Notices\u201d to the\nextent that it includes a convenient and prominently visible feature that (1)\ndisplays an appropriate copyright notice, and (2) tells the user that there is no\nwarranty for the work (except to the extent that warranties are provided), that\nlicensees may convey the work under this License, and how to view a copy of this\nLicense. If the interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n\n1. Source Code.\n\n\nThe \u201csource code\u201d for a work means the preferred form of the work for\nmaking modifications to it. \u201cObject code\u201d means any non-source form of a\nwork.\n\n\nA \u201cStandard Interface\u201d means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of interfaces\nspecified for a particular programming language, one that is widely used among\ndevelopers working in that language.\n\n\nThe \u201cSystem Libraries\u201d of an executable work include anything, other than\nthe work as a whole, that (a) is included in the normal form of packaging a Major\nComponent, but which is not part of that Major Component, and (b) serves only to\nenable use of the work with that Major Component, or to implement a Standard\nInterface for which an implementation is available to the public in source code form.\nA \u201cMajor Component\u201d, in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system (if any) on which\nthe executable work runs, or a compiler used to produce the work, or an object code\ninterpreter used to run it.\n\n\nThe \u201cCorresponding Source\u201d for a work in object code form means all the\nsource code needed to generate, install, and (for an executable work) run the object\ncode and to modify the work, including scripts to control those activities. However,\nit does not include the work's System Libraries, or general-purpose tools or\ngenerally available free programs which are used unmodified in performing those\nactivities but which are not part of the work. For example, Corresponding Source\nincludes interface definition files associated with source files for the work, and\nthe source code for shared libraries and dynamically linked subprograms that the work\nis specifically designed to require, such as by intimate data communication or\ncontrol flow between those subprograms and other parts of the work.\n\n\nThe Corresponding Source need not include anything that users can regenerate\nautomatically from other parts of the Corresponding Source.\n\n\nThe Corresponding Source for a work in source code form is that same work.\n\n\n2. Basic Permissions.\n\n\nAll rights granted under this License are granted for the term of copyright on the\nProgram, and are irrevocable provided the stated conditions are met. This License\nexplicitly affirms your unlimited permission to run the unmodified Program. The\noutput from running a covered work is covered by this License only if the output,\ngiven its content, constitutes a covered work. This License acknowledges your rights\nof fair use or other equivalent, as provided by copyright law.\n\n\nYou may make, run and propagate covered works that you do not convey, without\nconditions so long as your license otherwise remains in force. You may convey covered\nworks to others for the sole purpose of having them make modifications exclusively\nfor you, or provide you with facilities for running those works, provided that you\ncomply with the terms of this License in conveying all material for which you do not\ncontrol copyright. Those thus making or running the covered works for you must do so\nexclusively on your behalf, under your direction and control, on terms that prohibit\nthem from making any copies of your copyrighted material outside their relationship\nwith you.\n\n\nConveying under any other circumstances is permitted solely under the conditions\nstated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\n\n3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n\nNo covered work shall be deemed part of an effective technological measure under any\napplicable law fulfilling obligations under article 11 of the WIPO copyright treaty\nadopted on 20 December 1996, or similar laws prohibiting or restricting circumvention\nof such measures.\n\n\nWhen you convey a covered work, you waive any legal power to forbid circumvention of\ntechnological measures to the extent such circumvention is effected by exercising\nrights under this License with respect to the covered work, and you disclaim any\nintention to limit operation or modification of the work as a means of enforcing,\nagainst the work's users, your or third parties' legal rights to forbid circumvention\nof technological measures.\n\n\n4. Conveying Verbatim Copies.\n\n\nYou may convey verbatim copies of the Program's source code as you receive it, in any\nmedium, provided that you conspicuously and appropriately publish on each copy an\nappropriate copyright notice; keep intact all notices stating that this License and\nany non-permissive terms added in accord with section 7 apply to the code; keep\nintact all notices of the absence of any warranty; and give all recipients a copy of\nthis License along with the Program.\n\n\nYou may charge any price or no price for each copy that you convey, and you may offer\nsupport or warranty protection for a fee.\n\n\n5. Conveying Modified Source Versions.\n\n\nYou may convey a work based on the Program, or the modifications to produce it from\nthe Program, in the form of source code under the terms of section 4, provided that\nyou also meet all of these conditions:\n\n\n\n\na)\n The work must carry prominent notices stating that you modified it, and giving a\nrelevant date.\n\n\nb)\n The work must carry prominent notices stating that it is released under this\nLicense and any conditions added under section 7. This requirement modifies the\nrequirement in section 4 to \u201ckeep intact all notices\u201d.\n\n\nc)\n You must license the entire work, as a whole, under this License to anyone who\ncomes into possession of a copy. This License will therefore apply, along with any\napplicable section 7 additional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged. This License gives no permission to license the\nwork in any other way, but it does not invalidate such permission if you have\nseparately received it.\n\n\nd)\n If the work has interactive user interfaces, each must display Appropriate Legal\nNotices; however, if the Program has interactive interfaces that do not display\nAppropriate Legal Notices, your work need not make them do so.\n\n\n\n\nA compilation of a covered work with other separate and independent works, which are\nnot by their nature extensions of the covered work, and which are not combined with\nit such as to form a larger program, in or on a volume of a storage or distribution\nmedium, is called an \u201caggregate\u201d if the compilation and its resulting\ncopyright are not used to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit. Inclusion of a covered work in an aggregate\ndoes not cause this License to apply to the other parts of the aggregate.\n\n\n6. Conveying Non-Source Forms.\n\n\nYou may convey a covered work in object code form under the terms of sections 4 and\n5, provided that you also convey the machine-readable Corresponding Source under the\nterms of this License, in one of these ways:\n\n\n\n\na)\n Convey the object code in, or embodied in, a physical product (including a\nphysical distribution medium), accompanied by the Corresponding Source fixed on a\ndurable physical medium customarily used for software interchange.\n\n\nb)\n Convey the object code in, or embodied in, a physical product (including a\nphysical distribution medium), accompanied by a written offer, valid for at least\nthree years and valid for as long as you offer spare parts or customer support for\nthat product model, to give anyone who possesses the object code either (1) a copy of\nthe Corresponding Source for all the software in the product that is covered by this\nLicense, on a durable physical medium customarily used for software interchange, for\na price no more than your reasonable cost of physically performing this conveying of\nsource, or (2) access to copy the Corresponding Source from a network server at no\ncharge.\n\n\nc)\n Convey individual copies of the object code with a copy of the written offer to\nprovide the Corresponding Source. This alternative is allowed only occasionally and\nnoncommercially, and only if you received the object code with such an offer, in\naccord with subsection 6b.\n\n\nd)\n Convey the object code by offering access from a designated place (gratis or for\na charge), and offer equivalent access to the Corresponding Source in the same way\nthrough the same place at no further charge. You need not require recipients to copy\nthe Corresponding Source along with the object code. If the place to copy the object\ncode is a network server, the Corresponding Source may be on a different server\n(operated by you or a third party) that supports equivalent copying facilities,\nprovided you maintain clear directions next to the object code saying where to find\nthe Corresponding Source. Regardless of what server hosts the Corresponding Source,\nyou remain obligated to ensure that it is available for as long as needed to satisfy\nthese requirements.\n\n\ne)\n Convey the object code using peer-to-peer transmission, provided you inform\nother peers where the object code and Corresponding Source of the work are being\noffered to the general public at no charge under subsection 6d.\n\n\n\n\nA separable portion of the object code, whose source code is excluded from the\nCorresponding Source as a System Library, need not be included in conveying the\nobject code work.\n\n\nA \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which\nmeans any tangible personal property which is normally used for personal, family, or\nhousehold purposes, or (2) anything designed or sold for incorporation into a\ndwelling. In determining whether a product is a consumer product, doubtful cases\nshall be resolved in favor of coverage. For a particular product received by a\nparticular user, \u201cnormally used\u201d refers to a typical or common use of\nthat class of product, regardless of the status of the particular user or of the way\nin which the particular user actually uses, or expects or is expected to use, the\nproduct. A product is a consumer product regardless of whether the product has\nsubstantial commercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n\n\u201cInstallation Information\u201d for a User Product means any methods,\nprocedures, authorization keys, or other information required to install and execute\nmodified versions of a covered work in that User Product from a modified version of\nits Corresponding Source. The information must suffice to ensure that the continued\nfunctioning of the modified object code is in no case prevented or interfered with\nsolely because modification has been made.\n\n\nIf you convey an object code work under this section in, or with, or specifically for\nuse in, a User Product, and the conveying occurs as part of a transaction in which\nthe right of possession and use of the User Product is transferred to the recipient\nin perpetuity or for a fixed term (regardless of how the transaction is\ncharacterized), the Corresponding Source conveyed under this section must be\naccompanied by the Installation Information. But this requirement does not apply if\nneither you nor any third party retains the ability to install modified object code\non the User Product (for example, the work has been installed in ROM).\n\n\nThe requirement to provide Installation Information does not include a requirement to\ncontinue to provide support service, warranty, or updates for a work that has been\nmodified or installed by the recipient, or for the User Product in which it has been\nmodified or installed. Access to a network may be denied when the modification itself\nmaterially and adversely affects the operation of the network or violates the rules\nand protocols for communication across the network.\n\n\nCorresponding Source conveyed, and Installation Information provided, in accord with\nthis section must be in a format that is publicly documented (and with an\nimplementation available to the public in source code form), and must require no\nspecial password or key for unpacking, reading or copying.\n\n\n7. Additional Terms.\n\n\n\u201cAdditional permissions\u201d are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions. Additional\npermissions that are applicable to the entire Program shall be treated as though they\nwere included in this License, to the extent that they are valid under applicable\nlaw. If additional permissions apply only to part of the Program, that part may be\nused separately under those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n\nWhen you convey a copy of a covered work, you may at your option remove any\nadditional permissions from that copy, or from any part of it. (Additional\npermissions may be written to require their own removal in certain cases when you\nmodify the work.) You may place additional permissions on material, added by you to a\ncovered work, for which you have or can give appropriate copyright permission.\n\n\nNotwithstanding any other provision of this License, for material you add to a\ncovered work, you may (if authorized by the copyright holders of that material)\nsupplement the terms of this License with terms:\n\n\n\n\na)\n Disclaiming warranty or limiting liability differently from the terms of\nsections 15 and 16 of this License; or\n\n\nb)\n Requiring preservation of specified reasonable legal notices or author\nattributions in that material or in the Appropriate Legal Notices displayed by works\ncontaining it; or\n\n\nc)\n Prohibiting misrepresentation of the origin of that material, or requiring that\nmodified versions of such material be marked in reasonable ways as different from the\noriginal version; or\n\n\nd)\n Limiting the use for publicity purposes of names of licensors or authors of the\nmaterial; or\n\n\ne)\n Declining to grant rights under trademark law for use of some trade names,\ntrademarks, or service marks; or\n\n\nf)\n Requiring indemnification of licensors and authors of that material by anyone\nwho conveys the material (or modified versions of it) with contractual assumptions of\nliability to the recipient, for any liability that these contractual assumptions\ndirectly impose on those licensors and authors.\n\n\n\n\nAll other non-permissive additional terms are considered \u201cfurther\nrestrictions\u201d within the meaning of section 10. If the Program as you received\nit, or any part of it, contains a notice stating that it is governed by this License\nalong with a term that is a further restriction, you may remove that term. If a\nlicense document contains a further restriction but permits relicensing or conveying\nunder this License, you may add to a covered work material governed by the terms of\nthat license document, provided that the further restriction does not survive such\nrelicensing or conveying.\n\n\nIf you add terms to a covered work in accord with this section, you must place, in\nthe relevant source files, a statement of the additional terms that apply to those\nfiles, or a notice indicating where to find the applicable terms.\n\n\nAdditional terms, permissive or non-permissive, may be stated in the form of a\nseparately written license, or stated as exceptions; the above requirements apply\neither way.\n\n\n8. Termination.\n\n\nYou may not propagate or modify a covered work except as expressly provided under\nthis License. Any attempt otherwise to propagate or modify it is void, and will\nautomatically terminate your rights under this License (including any patent licenses\ngranted under the third paragraph of section 11).\n\n\nHowever, if you cease all violation of this License, then your license from a\nparticular copyright holder is reinstated (a) provisionally, unless and until the\ncopyright holder explicitly and finally terminates your license, and (b) permanently,\nif the copyright holder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n\nMoreover, your license from a particular copyright holder is reinstated permanently\nif the copyright holder notifies you of the violation by some reasonable means, this\nis the first time you have received notice of violation of this License (for any\nwork) from that copyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n\nTermination of your rights under this section does not terminate the licenses of\nparties who have received copies or rights from you under this License. If your\nrights have been terminated and not permanently reinstated, you do not qualify to\nreceive new licenses for the same material under section 10.\n\n\n9. Acceptance Not Required for Having Copies.\n\n\nYou are not required to accept this License in order to receive or run a copy of the\nProgram. Ancillary propagation of a covered work occurring solely as a consequence of\nusing peer-to-peer transmission to receive a copy likewise does not require\nacceptance. However, nothing other than this License grants you permission to\npropagate or modify any covered work. These actions infringe copyright if you do not\naccept this License. Therefore, by modifying or propagating a covered work, you\nindicate your acceptance of this License to do so.\n\n\n10. Automatic Licensing of Downstream Recipients.\n\n\nEach time you convey a covered work, the recipient automatically receives a license\nfrom the original licensors, to run, modify and propagate that work, subject to this\nLicense. You are not responsible for enforcing compliance by third parties with this\nLicense.\n\n\nAn \u201centity transaction\u201d is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an organization, or\nmerging organizations. If propagation of a covered work results from an entity\ntransaction, each party to that transaction who receives a copy of the work also\nreceives whatever licenses to the work the party's predecessor in interest had or\ncould give under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if the predecessor\nhas it or can get it with reasonable efforts.\n\n\nYou may not impose any further restrictions on the exercise of the rights granted or\naffirmed under this License. For example, you may not impose a license fee, royalty,\nor other charge for exercise of rights granted under this License, and you may not\ninitiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging\nthat any patent claim is infringed by making, using, selling, offering for sale, or\nimporting the Program or any portion of it.\n\n\n11. Patents.\n\n\nA \u201ccontributor\u201d is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based. The work thus\nlicensed is called the contributor's \u201ccontributor version\u201d.\n\n\nA contributor's \u201cessential patent claims\u201d are all patent claims owned or\ncontrolled by the contributor, whether already acquired or hereafter acquired, that\nwould be infringed by some manner, permitted by this License, of making, using, or\nselling its contributor version, but do not include claims that would be infringed\nonly as a consequence of further modification of the contributor version. For\npurposes of this definition, \u201ccontrol\u201d includes the right to grant patent\nsublicenses in a manner consistent with the requirements of this License.\n\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license\nunder the contributor's essential patent claims, to make, use, sell, offer for sale,\nimport and otherwise run, modify and propagate the contents of its contributor\nversion.\n\n\nIn the following three paragraphs, a \u201cpatent license\u201d is any express\nagreement or commitment, however denominated, not to enforce a patent (such as an\nexpress permission to practice a patent or covenant not to sue for patent\ninfringement). To \u201cgrant\u201d such a patent license to a party means to make\nsuch an agreement or commitment not to enforce a patent against the party.\n\n\nIf you convey a covered work, knowingly relying on a patent license, and the\nCorresponding Source of the work is not available for anyone to copy, free of charge\nand under the terms of this License, through a publicly available network server or\nother readily accessible means, then you must either (1) cause the Corresponding\nSource to be so available, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner consistent with\nthe requirements of this License, to extend the patent license to downstream\nrecipients. \u201cKnowingly relying\u201d means you have actual knowledge that, but\nfor the patent license, your conveying the covered work in a country, or your\nrecipient's use of the covered work in a country, would infringe one or more\nidentifiable patents in that country that you have reason to believe are valid.\n\n\nIf, pursuant to or in connection with a single transaction or arrangement, you\nconvey, or propagate by procuring conveyance of, a covered work, and grant a patent\nlicense to some of the parties receiving the covered work authorizing them to use,\npropagate, modify or convey a specific copy of the covered work, then the patent\nlicense you grant is automatically extended to all recipients of the covered work and\nworks based on it.\n\n\nA patent license is \u201cdiscriminatory\u201d if it does not include within the\nscope of its coverage, prohibits the exercise of, or is conditioned on the\nnon-exercise of one or more of the rights that are specifically granted under this\nLicense. You may not convey a covered work if you are a party to an arrangement with\na third party that is in the business of distributing software, under which you make\npayment to the third party based on the extent of your activity of conveying the\nwork, and under which the third party grants, to any of the parties who would receive\nthe covered work from you, a discriminatory patent license (a) in connection with\ncopies of the covered work conveyed by you (or copies made from those copies), or (b)\nprimarily for and in connection with specific products or compilations that contain\nthe covered work, unless you entered into that arrangement, or that patent license\nwas granted, prior to 28 March 2007.\n\n\nNothing in this License shall be construed as excluding or limiting any implied\nlicense or other defenses to infringement that may otherwise be available to you\nunder applicable patent law.\n\n\n12. No Surrender of Others' Freedom.\n\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise)\nthat contradict the conditions of this License, they do not excuse you from the\nconditions of this License. If you cannot convey a covered work so as to satisfy\nsimultaneously your obligations under this License and any other pertinent\nobligations, then as a consequence you may not convey it at all. For example, if you\nagree to terms that obligate you to collect a royalty for further conveying from\nthose to whom you convey the Program, the only way you could satisfy both those terms\nand this License would be to refrain entirely from conveying the Program.\n\n\n13. Use with the GNU Affero General Public License.\n\n\nNotwithstanding any other provision of this License, you have permission to link or\ncombine any covered work with a work licensed under version 3 of the GNU Affero\nGeneral Public License into a single combined work, and to convey the resulting work.\nThe terms of this License will continue to apply to the part which is the covered\nwork, but the special requirements of the GNU Affero General Public License, section\n13, concerning interaction through a network will apply to the combination as such.\n\n\n14. Revised Versions of this License.\n\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU\nGeneral Public License from time to time. Such new versions will be similar in spirit\nto the present version, but may differ in detail to address new problems or concerns.\n\n\nEach version is given a distinguishing version number. If the Program specifies that\na certain numbered version of the GNU General Public License \u201cor any later\nversion\u201d applies to it, you have the option of following the terms and\nconditions either of that numbered version or of any later version published by the\nFree Software Foundation. If the Program does not specify a version number of the GNU\nGeneral Public License, you may choose any version ever published by the Free\nSoftware Foundation.\n\n\nIf the Program specifies that a proxy can decide which future versions of the GNU\nGeneral Public License can be used, that proxy's public statement of acceptance of a\nversion permanently authorizes you to choose that version for the Program.\n\n\nLater license versions may give you additional or different permissions. However, no\nadditional obligations are imposed on any author or copyright holder as a result of\nyour choosing to follow a later version.\n\n\n15. Disclaimer of Warranty.\n\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER\nEXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE\nQUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n\n16. Limitation of Liability.\n\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY\nCOPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS\nPERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,\nINCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nPROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE\nOR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE\nWITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\n17. Interpretation of Sections 15 and 16.\n\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be\ngiven local legal effect according to their terms, reviewing courts shall apply local\nlaw that most closely approximates an absolute waiver of all civil liability in\nconnection with the Program, unless a warranty or assumption of liability accompanies\na copy of the Program in return for a fee.\n\n\nEND OF TERMS AND CONDITIONS\n\n\n\n\nException for plugins\n\n\nAs a special exception to the GPL version 3, plugins written by users of this software\n are not considered a derivative work and are not covered by this license, unless stated\n otherwise by their author(s). As a result, you may distribute plugins that you have written\n yourself under whichever license suits you.",
            "title": "License"
        },
        {
            "location": "/about/license/index.html#gnu-general-public-license",
            "text": "Version 3, 29 June 2007  Copyright \u00a9 2007 Free Software Foundation, Inc. < http://fsf.org/ >  Everyone is permitted to copy and distribute verbatim copies of this license\ndocument, but changing it is not allowed.",
            "title": "GNU GENERAL PUBLIC LICENSE"
        },
        {
            "location": "/about/license/index.html#preamble",
            "text": "The GNU General Public License is a free, copyleft license for software and other\nkinds of works.  The licenses for most software and other practical works are designed to take away\nyour freedom to share and change the works. By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change all versions of a\nprogram--to make sure it remains free software for all its users. We, the Free\nSoftware Foundation, use the GNU General Public License for most of our software; it\napplies also to any other work released this way by its authors. You can apply it to\nyour programs, too.  When we speak of free software, we are referring to freedom, not price. Our General\nPublic Licenses are designed to make sure that you have the freedom to distribute\ncopies of free software (and charge for them if you wish), that you receive source\ncode or can get it if you want it, that you can change the software or use pieces of\nit in new free programs, and that you know you can do these things.  To protect your rights, we need to prevent others from denying you these rights or\nasking you to surrender the rights. Therefore, you have certain responsibilities if\nyou distribute copies of the software, or if you modify it: responsibilities to\nrespect the freedom of others.  For example, if you distribute copies of such a program, whether gratis or for a fee,\nyou must pass on to the recipients the same freedoms that you received. You must make\nsure that they, too, receive or can get the source code. And you must show them these\nterms so they know their rights.  Developers that use the GNU GPL protect your rights with two steps: (1) assert\ncopyright on the software, and (2) offer you this License giving you legal permission\nto copy, distribute and/or modify it.  For the developers' and authors' protection, the GPL clearly explains that there is\nno warranty for this free software. For both users' and authors' sake, the GPL\nrequires that modified versions be marked as changed, so that their problems will not\nbe attributed erroneously to authors of previous versions.  Some devices are designed to deny users access to install or run modified versions of\nthe software inside them, although the manufacturer can do so. This is fundamentally\nincompatible with the aim of protecting users' freedom to change the software. The\nsystematic pattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable. Therefore, we have designed\nthis version of the GPL to prohibit the practice for those products. If such problems\narise substantially in other domains, we stand ready to extend this provision to\nthose domains in future versions of the GPL, as needed to protect the freedom of\nusers.  Finally, every program is threatened constantly by software patents. States should\nnot allow patents to restrict development and use of software on general-purpose\ncomputers, but in those that do, we wish to avoid the special danger that patents\napplied to a free program could make it effectively proprietary. To prevent this, the\nGPL assures that patents cannot be used to render the program non-free.  The precise terms and conditions for copying, distribution and modification follow.",
            "title": "Preamble"
        },
        {
            "location": "/about/license/index.html#terms-and-conditions",
            "text": "",
            "title": "TERMS AND CONDITIONS"
        },
        {
            "location": "/about/license/index.html#0-definitions",
            "text": "\u201cThis License\u201d refers to version 3 of the GNU General Public License.  \u201cCopyright\u201d also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.  \u201cThe Program\u201d refers to any copyrightable work licensed under this\nLicense. Each licensee is addressed as \u201cyou\u201d. \u201cLicensees\u201d and\n\u201crecipients\u201d may be individuals or organizations.  To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in\na fashion requiring copyright permission, other than the making of an exact copy. The\nresulting work is called a \u201cmodified version\u201d of the earlier work or a\nwork \u201cbased on\u201d the earlier work.  A \u201ccovered work\u201d means either the unmodified Program or a work based on\nthe Program.  To \u201cpropagate\u201d a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for infringement under\napplicable copyright law, except executing it on a computer or modifying a private\ncopy. Propagation includes copying, distribution (with or without modification),\nmaking available to the public, and in some countries other activities as well.  To \u201cconvey\u201d a work means any kind of propagation that enables other\nparties to make or receive copies. Mere interaction with a user through a computer\nnetwork, with no transfer of a copy, is not conveying.  An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the\nextent that it includes a convenient and prominently visible feature that (1)\ndisplays an appropriate copyright notice, and (2) tells the user that there is no\nwarranty for the work (except to the extent that warranties are provided), that\nlicensees may convey the work under this License, and how to view a copy of this\nLicense. If the interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.",
            "title": "0. Definitions."
        },
        {
            "location": "/about/license/index.html#1-source-code",
            "text": "The \u201csource code\u201d for a work means the preferred form of the work for\nmaking modifications to it. \u201cObject code\u201d means any non-source form of a\nwork.  A \u201cStandard Interface\u201d means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of interfaces\nspecified for a particular programming language, one that is widely used among\ndevelopers working in that language.  The \u201cSystem Libraries\u201d of an executable work include anything, other than\nthe work as a whole, that (a) is included in the normal form of packaging a Major\nComponent, but which is not part of that Major Component, and (b) serves only to\nenable use of the work with that Major Component, or to implement a Standard\nInterface for which an implementation is available to the public in source code form.\nA \u201cMajor Component\u201d, in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system (if any) on which\nthe executable work runs, or a compiler used to produce the work, or an object code\ninterpreter used to run it.  The \u201cCorresponding Source\u201d for a work in object code form means all the\nsource code needed to generate, install, and (for an executable work) run the object\ncode and to modify the work, including scripts to control those activities. However,\nit does not include the work's System Libraries, or general-purpose tools or\ngenerally available free programs which are used unmodified in performing those\nactivities but which are not part of the work. For example, Corresponding Source\nincludes interface definition files associated with source files for the work, and\nthe source code for shared libraries and dynamically linked subprograms that the work\nis specifically designed to require, such as by intimate data communication or\ncontrol flow between those subprograms and other parts of the work.  The Corresponding Source need not include anything that users can regenerate\nautomatically from other parts of the Corresponding Source.  The Corresponding Source for a work in source code form is that same work.",
            "title": "1. Source Code."
        },
        {
            "location": "/about/license/index.html#2-basic-permissions",
            "text": "All rights granted under this License are granted for the term of copyright on the\nProgram, and are irrevocable provided the stated conditions are met. This License\nexplicitly affirms your unlimited permission to run the unmodified Program. The\noutput from running a covered work is covered by this License only if the output,\ngiven its content, constitutes a covered work. This License acknowledges your rights\nof fair use or other equivalent, as provided by copyright law.  You may make, run and propagate covered works that you do not convey, without\nconditions so long as your license otherwise remains in force. You may convey covered\nworks to others for the sole purpose of having them make modifications exclusively\nfor you, or provide you with facilities for running those works, provided that you\ncomply with the terms of this License in conveying all material for which you do not\ncontrol copyright. Those thus making or running the covered works for you must do so\nexclusively on your behalf, under your direction and control, on terms that prohibit\nthem from making any copies of your copyrighted material outside their relationship\nwith you.  Conveying under any other circumstances is permitted solely under the conditions\nstated below. Sublicensing is not allowed; section 10 makes it unnecessary.",
            "title": "2. Basic Permissions."
        },
        {
            "location": "/about/license/index.html#3-protecting-users-legal-rights-from-anti-circumvention-law",
            "text": "No covered work shall be deemed part of an effective technological measure under any\napplicable law fulfilling obligations under article 11 of the WIPO copyright treaty\nadopted on 20 December 1996, or similar laws prohibiting or restricting circumvention\nof such measures.  When you convey a covered work, you waive any legal power to forbid circumvention of\ntechnological measures to the extent such circumvention is effected by exercising\nrights under this License with respect to the covered work, and you disclaim any\nintention to limit operation or modification of the work as a means of enforcing,\nagainst the work's users, your or third parties' legal rights to forbid circumvention\nof technological measures.",
            "title": "3. Protecting Users' Legal Rights From Anti-Circumvention Law."
        },
        {
            "location": "/about/license/index.html#4-conveying-verbatim-copies",
            "text": "You may convey verbatim copies of the Program's source code as you receive it, in any\nmedium, provided that you conspicuously and appropriately publish on each copy an\nappropriate copyright notice; keep intact all notices stating that this License and\nany non-permissive terms added in accord with section 7 apply to the code; keep\nintact all notices of the absence of any warranty; and give all recipients a copy of\nthis License along with the Program.  You may charge any price or no price for each copy that you convey, and you may offer\nsupport or warranty protection for a fee.",
            "title": "4. Conveying Verbatim Copies."
        },
        {
            "location": "/about/license/index.html#5-conveying-modified-source-versions",
            "text": "You may convey a work based on the Program, or the modifications to produce it from\nthe Program, in the form of source code under the terms of section 4, provided that\nyou also meet all of these conditions:   a)  The work must carry prominent notices stating that you modified it, and giving a\nrelevant date.  b)  The work must carry prominent notices stating that it is released under this\nLicense and any conditions added under section 7. This requirement modifies the\nrequirement in section 4 to \u201ckeep intact all notices\u201d.  c)  You must license the entire work, as a whole, under this License to anyone who\ncomes into possession of a copy. This License will therefore apply, along with any\napplicable section 7 additional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged. This License gives no permission to license the\nwork in any other way, but it does not invalidate such permission if you have\nseparately received it.  d)  If the work has interactive user interfaces, each must display Appropriate Legal\nNotices; however, if the Program has interactive interfaces that do not display\nAppropriate Legal Notices, your work need not make them do so.   A compilation of a covered work with other separate and independent works, which are\nnot by their nature extensions of the covered work, and which are not combined with\nit such as to form a larger program, in or on a volume of a storage or distribution\nmedium, is called an \u201caggregate\u201d if the compilation and its resulting\ncopyright are not used to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit. Inclusion of a covered work in an aggregate\ndoes not cause this License to apply to the other parts of the aggregate.",
            "title": "5. Conveying Modified Source Versions."
        },
        {
            "location": "/about/license/index.html#6-conveying-non-source-forms",
            "text": "You may convey a covered work in object code form under the terms of sections 4 and\n5, provided that you also convey the machine-readable Corresponding Source under the\nterms of this License, in one of these ways:   a)  Convey the object code in, or embodied in, a physical product (including a\nphysical distribution medium), accompanied by the Corresponding Source fixed on a\ndurable physical medium customarily used for software interchange.  b)  Convey the object code in, or embodied in, a physical product (including a\nphysical distribution medium), accompanied by a written offer, valid for at least\nthree years and valid for as long as you offer spare parts or customer support for\nthat product model, to give anyone who possesses the object code either (1) a copy of\nthe Corresponding Source for all the software in the product that is covered by this\nLicense, on a durable physical medium customarily used for software interchange, for\na price no more than your reasonable cost of physically performing this conveying of\nsource, or (2) access to copy the Corresponding Source from a network server at no\ncharge.  c)  Convey individual copies of the object code with a copy of the written offer to\nprovide the Corresponding Source. This alternative is allowed only occasionally and\nnoncommercially, and only if you received the object code with such an offer, in\naccord with subsection 6b.  d)  Convey the object code by offering access from a designated place (gratis or for\na charge), and offer equivalent access to the Corresponding Source in the same way\nthrough the same place at no further charge. You need not require recipients to copy\nthe Corresponding Source along with the object code. If the place to copy the object\ncode is a network server, the Corresponding Source may be on a different server\n(operated by you or a third party) that supports equivalent copying facilities,\nprovided you maintain clear directions next to the object code saying where to find\nthe Corresponding Source. Regardless of what server hosts the Corresponding Source,\nyou remain obligated to ensure that it is available for as long as needed to satisfy\nthese requirements.  e)  Convey the object code using peer-to-peer transmission, provided you inform\nother peers where the object code and Corresponding Source of the work are being\noffered to the general public at no charge under subsection 6d.   A separable portion of the object code, whose source code is excluded from the\nCorresponding Source as a System Library, need not be included in conveying the\nobject code work.  A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which\nmeans any tangible personal property which is normally used for personal, family, or\nhousehold purposes, or (2) anything designed or sold for incorporation into a\ndwelling. In determining whether a product is a consumer product, doubtful cases\nshall be resolved in favor of coverage. For a particular product received by a\nparticular user, \u201cnormally used\u201d refers to a typical or common use of\nthat class of product, regardless of the status of the particular user or of the way\nin which the particular user actually uses, or expects or is expected to use, the\nproduct. A product is a consumer product regardless of whether the product has\nsubstantial commercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.  \u201cInstallation Information\u201d for a User Product means any methods,\nprocedures, authorization keys, or other information required to install and execute\nmodified versions of a covered work in that User Product from a modified version of\nits Corresponding Source. The information must suffice to ensure that the continued\nfunctioning of the modified object code is in no case prevented or interfered with\nsolely because modification has been made.  If you convey an object code work under this section in, or with, or specifically for\nuse in, a User Product, and the conveying occurs as part of a transaction in which\nthe right of possession and use of the User Product is transferred to the recipient\nin perpetuity or for a fixed term (regardless of how the transaction is\ncharacterized), the Corresponding Source conveyed under this section must be\naccompanied by the Installation Information. But this requirement does not apply if\nneither you nor any third party retains the ability to install modified object code\non the User Product (for example, the work has been installed in ROM).  The requirement to provide Installation Information does not include a requirement to\ncontinue to provide support service, warranty, or updates for a work that has been\nmodified or installed by the recipient, or for the User Product in which it has been\nmodified or installed. Access to a network may be denied when the modification itself\nmaterially and adversely affects the operation of the network or violates the rules\nand protocols for communication across the network.  Corresponding Source conveyed, and Installation Information provided, in accord with\nthis section must be in a format that is publicly documented (and with an\nimplementation available to the public in source code form), and must require no\nspecial password or key for unpacking, reading or copying.",
            "title": "6. Conveying Non-Source Forms."
        },
        {
            "location": "/about/license/index.html#7-additional-terms",
            "text": "\u201cAdditional permissions\u201d are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions. Additional\npermissions that are applicable to the entire Program shall be treated as though they\nwere included in this License, to the extent that they are valid under applicable\nlaw. If additional permissions apply only to part of the Program, that part may be\nused separately under those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.  When you convey a copy of a covered work, you may at your option remove any\nadditional permissions from that copy, or from any part of it. (Additional\npermissions may be written to require their own removal in certain cases when you\nmodify the work.) You may place additional permissions on material, added by you to a\ncovered work, for which you have or can give appropriate copyright permission.  Notwithstanding any other provision of this License, for material you add to a\ncovered work, you may (if authorized by the copyright holders of that material)\nsupplement the terms of this License with terms:   a)  Disclaiming warranty or limiting liability differently from the terms of\nsections 15 and 16 of this License; or  b)  Requiring preservation of specified reasonable legal notices or author\nattributions in that material or in the Appropriate Legal Notices displayed by works\ncontaining it; or  c)  Prohibiting misrepresentation of the origin of that material, or requiring that\nmodified versions of such material be marked in reasonable ways as different from the\noriginal version; or  d)  Limiting the use for publicity purposes of names of licensors or authors of the\nmaterial; or  e)  Declining to grant rights under trademark law for use of some trade names,\ntrademarks, or service marks; or  f)  Requiring indemnification of licensors and authors of that material by anyone\nwho conveys the material (or modified versions of it) with contractual assumptions of\nliability to the recipient, for any liability that these contractual assumptions\ndirectly impose on those licensors and authors.   All other non-permissive additional terms are considered \u201cfurther\nrestrictions\u201d within the meaning of section 10. If the Program as you received\nit, or any part of it, contains a notice stating that it is governed by this License\nalong with a term that is a further restriction, you may remove that term. If a\nlicense document contains a further restriction but permits relicensing or conveying\nunder this License, you may add to a covered work material governed by the terms of\nthat license document, provided that the further restriction does not survive such\nrelicensing or conveying.  If you add terms to a covered work in accord with this section, you must place, in\nthe relevant source files, a statement of the additional terms that apply to those\nfiles, or a notice indicating where to find the applicable terms.  Additional terms, permissive or non-permissive, may be stated in the form of a\nseparately written license, or stated as exceptions; the above requirements apply\neither way.",
            "title": "7. Additional Terms."
        },
        {
            "location": "/about/license/index.html#8-termination",
            "text": "You may not propagate or modify a covered work except as expressly provided under\nthis License. Any attempt otherwise to propagate or modify it is void, and will\nautomatically terminate your rights under this License (including any patent licenses\ngranted under the third paragraph of section 11).  However, if you cease all violation of this License, then your license from a\nparticular copyright holder is reinstated (a) provisionally, unless and until the\ncopyright holder explicitly and finally terminates your license, and (b) permanently,\nif the copyright holder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.  Moreover, your license from a particular copyright holder is reinstated permanently\nif the copyright holder notifies you of the violation by some reasonable means, this\nis the first time you have received notice of violation of this License (for any\nwork) from that copyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.  Termination of your rights under this section does not terminate the licenses of\nparties who have received copies or rights from you under this License. If your\nrights have been terminated and not permanently reinstated, you do not qualify to\nreceive new licenses for the same material under section 10.",
            "title": "8. Termination."
        },
        {
            "location": "/about/license/index.html#9-acceptance-not-required-for-having-copies",
            "text": "You are not required to accept this License in order to receive or run a copy of the\nProgram. Ancillary propagation of a covered work occurring solely as a consequence of\nusing peer-to-peer transmission to receive a copy likewise does not require\nacceptance. However, nothing other than this License grants you permission to\npropagate or modify any covered work. These actions infringe copyright if you do not\naccept this License. Therefore, by modifying or propagating a covered work, you\nindicate your acceptance of this License to do so.",
            "title": "9. Acceptance Not Required for Having Copies."
        },
        {
            "location": "/about/license/index.html#10-automatic-licensing-of-downstream-recipients",
            "text": "Each time you convey a covered work, the recipient automatically receives a license\nfrom the original licensors, to run, modify and propagate that work, subject to this\nLicense. You are not responsible for enforcing compliance by third parties with this\nLicense.  An \u201centity transaction\u201d is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an organization, or\nmerging organizations. If propagation of a covered work results from an entity\ntransaction, each party to that transaction who receives a copy of the work also\nreceives whatever licenses to the work the party's predecessor in interest had or\ncould give under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if the predecessor\nhas it or can get it with reasonable efforts.  You may not impose any further restrictions on the exercise of the rights granted or\naffirmed under this License. For example, you may not impose a license fee, royalty,\nor other charge for exercise of rights granted under this License, and you may not\ninitiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging\nthat any patent claim is infringed by making, using, selling, offering for sale, or\nimporting the Program or any portion of it.",
            "title": "10. Automatic Licensing of Downstream Recipients."
        },
        {
            "location": "/about/license/index.html#11-patents",
            "text": "A \u201ccontributor\u201d is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based. The work thus\nlicensed is called the contributor's \u201ccontributor version\u201d.  A contributor's \u201cessential patent claims\u201d are all patent claims owned or\ncontrolled by the contributor, whether already acquired or hereafter acquired, that\nwould be infringed by some manner, permitted by this License, of making, using, or\nselling its contributor version, but do not include claims that would be infringed\nonly as a consequence of further modification of the contributor version. For\npurposes of this definition, \u201ccontrol\u201d includes the right to grant patent\nsublicenses in a manner consistent with the requirements of this License.  Each contributor grants you a non-exclusive, worldwide, royalty-free patent license\nunder the contributor's essential patent claims, to make, use, sell, offer for sale,\nimport and otherwise run, modify and propagate the contents of its contributor\nversion.  In the following three paragraphs, a \u201cpatent license\u201d is any express\nagreement or commitment, however denominated, not to enforce a patent (such as an\nexpress permission to practice a patent or covenant not to sue for patent\ninfringement). To \u201cgrant\u201d such a patent license to a party means to make\nsuch an agreement or commitment not to enforce a patent against the party.  If you convey a covered work, knowingly relying on a patent license, and the\nCorresponding Source of the work is not available for anyone to copy, free of charge\nand under the terms of this License, through a publicly available network server or\nother readily accessible means, then you must either (1) cause the Corresponding\nSource to be so available, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner consistent with\nthe requirements of this License, to extend the patent license to downstream\nrecipients. \u201cKnowingly relying\u201d means you have actual knowledge that, but\nfor the patent license, your conveying the covered work in a country, or your\nrecipient's use of the covered work in a country, would infringe one or more\nidentifiable patents in that country that you have reason to believe are valid.  If, pursuant to or in connection with a single transaction or arrangement, you\nconvey, or propagate by procuring conveyance of, a covered work, and grant a patent\nlicense to some of the parties receiving the covered work authorizing them to use,\npropagate, modify or convey a specific copy of the covered work, then the patent\nlicense you grant is automatically extended to all recipients of the covered work and\nworks based on it.  A patent license is \u201cdiscriminatory\u201d if it does not include within the\nscope of its coverage, prohibits the exercise of, or is conditioned on the\nnon-exercise of one or more of the rights that are specifically granted under this\nLicense. You may not convey a covered work if you are a party to an arrangement with\na third party that is in the business of distributing software, under which you make\npayment to the third party based on the extent of your activity of conveying the\nwork, and under which the third party grants, to any of the parties who would receive\nthe covered work from you, a discriminatory patent license (a) in connection with\ncopies of the covered work conveyed by you (or copies made from those copies), or (b)\nprimarily for and in connection with specific products or compilations that contain\nthe covered work, unless you entered into that arrangement, or that patent license\nwas granted, prior to 28 March 2007.  Nothing in this License shall be construed as excluding or limiting any implied\nlicense or other defenses to infringement that may otherwise be available to you\nunder applicable patent law.",
            "title": "11. Patents."
        },
        {
            "location": "/about/license/index.html#12-no-surrender-of-others-freedom",
            "text": "If conditions are imposed on you (whether by court order, agreement or otherwise)\nthat contradict the conditions of this License, they do not excuse you from the\nconditions of this License. If you cannot convey a covered work so as to satisfy\nsimultaneously your obligations under this License and any other pertinent\nobligations, then as a consequence you may not convey it at all. For example, if you\nagree to terms that obligate you to collect a royalty for further conveying from\nthose to whom you convey the Program, the only way you could satisfy both those terms\nand this License would be to refrain entirely from conveying the Program.",
            "title": "12. No Surrender of Others' Freedom."
        },
        {
            "location": "/about/license/index.html#13-use-with-the-gnu-affero-general-public-license",
            "text": "Notwithstanding any other provision of this License, you have permission to link or\ncombine any covered work with a work licensed under version 3 of the GNU Affero\nGeneral Public License into a single combined work, and to convey the resulting work.\nThe terms of this License will continue to apply to the part which is the covered\nwork, but the special requirements of the GNU Affero General Public License, section\n13, concerning interaction through a network will apply to the combination as such.",
            "title": "13. Use with the GNU Affero General Public License."
        },
        {
            "location": "/about/license/index.html#14-revised-versions-of-this-license",
            "text": "The Free Software Foundation may publish revised and/or new versions of the GNU\nGeneral Public License from time to time. Such new versions will be similar in spirit\nto the present version, but may differ in detail to address new problems or concerns.  Each version is given a distinguishing version number. If the Program specifies that\na certain numbered version of the GNU General Public License \u201cor any later\nversion\u201d applies to it, you have the option of following the terms and\nconditions either of that numbered version or of any later version published by the\nFree Software Foundation. If the Program does not specify a version number of the GNU\nGeneral Public License, you may choose any version ever published by the Free\nSoftware Foundation.  If the Program specifies that a proxy can decide which future versions of the GNU\nGeneral Public License can be used, that proxy's public statement of acceptance of a\nversion permanently authorizes you to choose that version for the Program.  Later license versions may give you additional or different permissions. However, no\nadditional obligations are imposed on any author or copyright holder as a result of\nyour choosing to follow a later version.",
            "title": "14. Revised Versions of this License."
        },
        {
            "location": "/about/license/index.html#15-disclaimer-of-warranty",
            "text": "THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER\nEXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE\nQUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.",
            "title": "15. Disclaimer of Warranty."
        },
        {
            "location": "/about/license/index.html#16-limitation-of-liability",
            "text": "IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY\nCOPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS\nPERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,\nINCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nPROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE\nOR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE\nWITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.",
            "title": "16. Limitation of Liability."
        },
        {
            "location": "/about/license/index.html#17-interpretation-of-sections-15-and-16",
            "text": "If the disclaimer of warranty and limitation of liability provided above cannot be\ngiven local legal effect according to their terms, reviewing courts shall apply local\nlaw that most closely approximates an absolute waiver of all civil liability in\nconnection with the Program, unless a warranty or assumption of liability accompanies\na copy of the Program in return for a fee.  END OF TERMS AND CONDITIONS",
            "title": "17. Interpretation of Sections 15 and 16."
        },
        {
            "location": "/about/license/index.html#exception-for-plugins",
            "text": "As a special exception to the GPL version 3, plugins written by users of this software\n are not considered a derivative work and are not covered by this license, unless stated\n otherwise by their author(s). As a result, you may distribute plugins that you have written\n yourself under whichever license suits you.",
            "title": "Exception for plugins"
        },
        {
            "location": "/about/acknowledgements/index.html",
            "text": "Acknowledgements\n\n\nDolmen uses the following open source libraries/projects:\n\n\n\n\nQt, from the Qt Project (LGPL), see \nqt-project.org\n\n\nlibsndfile, developed by Erik de Castro Lopo (LGPL), see \nwww.mega-nerd.com\n\n\nRTAudio, developed by Gary P. Scavone (MIT license), see \nwww.music.mcgill.ca/~gary/rtaudio\n\n\nSpeex, developed by Jean-Marc Valin and contributors (BSD license), see \nwww.speex.org\n\n\nQwt, developed by Uwe Rathmann (LGPL with exceptions), see \nqwt.sourceforge.net\n\n\nQxt, developed by the Qxt Foundation (LGPL), see \nlibqxt.org\n\n\nQuazip, developed by Sergey A. Tachenov (LGPL), see \nquazip.sourceforge.net\n\n\nQtJson, developed by Eeli Reilin and Luis Gustavo S. Barreto (BSD license)\n\n\nsendpraat, developed by Paul Boersma, see \nwww.praat.org\n\n\nFLAC, by Josh Coalson and contributors (BSD), see \nflac.sourceforge.net\n\n\nInno Setup (Windows installer), by Jordan Russell (free), see \nwww.jrsoftware.org\n\n\nLua, developed by PUC-Rio (MIT), see \nlua.org\n\n\nsol2, developed by Rapptz, ThePhD and contributors (MIT), see \nsol2.rtfd.io\n\n\nmkdocs, developed by Tom Christie (BSD), see \nmkdocs.org\n\n\nicons from \nicons8.com\n (Creative Commons Attribution-NoDerivs 3.0 Unported).\n\n\nutf8proc, developed by the Public Software Group (MIT), see \njulialang.org/utf8proc\n\n\nonigmo, developed by K.Takata and K.Kosako (BSD), see \ngithub.com/k-takata/Onigmo\n\n\n\n\nDolmen uses the following services for hosting its source code and documentation:\n\n\n\n\nGitHub\n\n\nRead the Docs\n\n\n\n\nThe development of search grammars has been supported by the Japanese Society for the Promotion of Science (JSPS), Grant-in-Aid for Scientific Research (B) n\u00b023320121 (2011-2014). Project title: \nA corpus-based longitudinal study of the interphonological features of Japanese learners of French\n.\nProject leader: Sylvain DETEY (Waseda University).",
            "title": "Acknowledgements"
        },
        {
            "location": "/about/acknowledgements/index.html#acknowledgements",
            "text": "Dolmen uses the following open source libraries/projects:   Qt, from the Qt Project (LGPL), see  qt-project.org  libsndfile, developed by Erik de Castro Lopo (LGPL), see  www.mega-nerd.com  RTAudio, developed by Gary P. Scavone (MIT license), see  www.music.mcgill.ca/~gary/rtaudio  Speex, developed by Jean-Marc Valin and contributors (BSD license), see  www.speex.org  Qwt, developed by Uwe Rathmann (LGPL with exceptions), see  qwt.sourceforge.net  Qxt, developed by the Qxt Foundation (LGPL), see  libqxt.org  Quazip, developed by Sergey A. Tachenov (LGPL), see  quazip.sourceforge.net  QtJson, developed by Eeli Reilin and Luis Gustavo S. Barreto (BSD license)  sendpraat, developed by Paul Boersma, see  www.praat.org  FLAC, by Josh Coalson and contributors (BSD), see  flac.sourceforge.net  Inno Setup (Windows installer), by Jordan Russell (free), see  www.jrsoftware.org  Lua, developed by PUC-Rio (MIT), see  lua.org  sol2, developed by Rapptz, ThePhD and contributors (MIT), see  sol2.rtfd.io  mkdocs, developed by Tom Christie (BSD), see  mkdocs.org  icons from  icons8.com  (Creative Commons Attribution-NoDerivs 3.0 Unported).  utf8proc, developed by the Public Software Group (MIT), see  julialang.org/utf8proc  onigmo, developed by K.Takata and K.Kosako (BSD), see  github.com/k-takata/Onigmo   Dolmen uses the following services for hosting its source code and documentation:   GitHub  Read the Docs   The development of search grammars has been supported by the Japanese Society for the Promotion of Science (JSPS), Grant-in-Aid for Scientific Research (B) n\u00b023320121 (2011-2014). Project title:  A corpus-based longitudinal study of the interphonological features of Japanese learners of French .\nProject leader: Sylvain DETEY (Waseda University).",
            "title": "Acknowledgements"
        }
    ]
}